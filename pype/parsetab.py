
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OP_MUL':([15,],[20,]),'NUMBER':([7,11,12,13,14,16,19,20,21,23,25,26,29,30,31,32,33,34,36,40,41,42,44,45,46,48,52,53,54,55,56,],[11,-27,-26,-28,11,-9,-8,11,11,11,11,11,11,-30,-21,11,11,11,-13,11,11,-11,-24,-29,-20,-25,-12,-23,-22,-10,-19,]),'ID':([1,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[7,12,17,-27,-26,-28,12,21,-9,-8,12,12,33,12,38,12,12,38,12,-30,-21,12,12,12,-15,-13,49,-17,38,12,12,-11,38,-24,-29,-20,-25,-18,57,-14,-12,-23,-22,-10,-19,-16,]),'LBRACE':([0,3,4,6,9,10,18,28,],[1,1,-4,-5,-3,-2,-7,-6,]),'RBRACE':([11,12,13,14,16,19,31,36,42,44,46,48,52,53,54,55,56,],[-27,-26,-28,18,-9,-8,-21,-13,-11,-24,-20,-25,-12,-23,-22,-10,-19,]),'STRING':([7,11,12,13,14,16,19,20,21,23,25,26,29,30,31,32,33,34,36,40,41,42,44,45,46,48,52,53,54,55,56,],[13,-27,-26,-28,13,-9,-8,13,13,13,13,13,13,-30,-21,13,13,13,-13,13,13,-11,-24,-29,-20,-25,-12,-23,-22,-10,-19,]),'ASSIGN':([15,],[22,]),'$end':([3,4,5,6,9,10,18,28,],[-1,-4,0,-5,-3,-2,-7,-6,]),'OUTPUT':([15,],[24,]),'OP_SUB':([15,],[25,]),'IMPORT':([2,],[8,]),'RPAREN':([11,12,13,17,21,24,27,29,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,31,36,42,44,-30,-21,46,48,-15,-13,-17,52,53,54,-11,55,-24,-29,-20,56,-25,-14,-12,-23,-22,-10,-19,58,-16,]),'LPAREN':([0,3,4,6,7,9,10,11,12,13,14,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,58,],[2,2,-4,-5,15,-3,-2,-27,-26,-28,15,-9,-7,-8,15,15,15,37,15,15,37,-6,15,-30,-21,15,15,15,-15,-13,-17,37,15,15,-11,37,-24,-29,-20,-25,-14,-12,-23,-22,-10,-19,-16,]),'INPUT':([15,],[27,]),'OP_DIV':([15,],[23,]),'OP_ADD':([15,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[14,]),'type':([37,],[50,]),'component':([0,3,],[6,10,]),'statement_list':([0,],[3,]),'declaration':([24,27,39,43,],[35,35,51,51,]),'parameter_list':([20,21,23,25,26,],[29,32,34,40,41,]),'declaration_list':([24,27,],[39,43,]),'import_statement':([0,3,],[4,9,]),'program':([0,],[5,]),'expression':([7,14,20,21,23,25,26,29,32,33,34,40,41,],[16,19,30,30,30,30,30,45,45,47,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
