
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'$end':([1,3,4,6,7,8,19,28,],[-1,-5,0,-4,-2,-3,-7,-6,]),'IMPORT':([5,],[10,]),'STRING':([9,11,12,13,14,15,18,20,22,23,24,27,29,30,31,32,33,34,35,39,42,43,44,45,47,48,49,51,54,55,56,],[11,-28,-26,-27,-9,11,-8,11,11,11,11,11,-21,11,-30,11,11,11,11,-11,-13,11,-20,-29,-23,-24,-25,-10,-12,-22,-19,]),'ID':([2,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[9,12,17,-28,-26,-27,-9,12,20,-8,12,32,12,12,12,38,38,12,-21,12,-30,12,12,12,12,38,-15,-17,-11,52,38,-13,12,-20,-29,-23,-24,-25,-14,-10,-18,57,-12,-22,-19,-16,]),'ASSIGN':([16,],[21,]),'NUMBER':([9,11,12,13,14,15,18,20,22,23,24,27,29,30,31,32,33,34,35,39,42,43,44,45,47,48,49,51,54,55,56,],[13,-28,-26,-27,-9,13,-8,13,13,13,13,13,-21,13,-30,13,13,13,13,-11,-13,13,-20,-29,-23,-24,-25,-10,-12,-22,-19,]),'RPAREN':([11,12,13,17,20,25,26,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-28,-26,-27,28,29,39,42,-21,44,-30,47,48,49,51,-15,-17,-11,54,-13,55,-20,-29,56,-23,-24,-25,-14,-10,-12,-22,-19,58,-16,]),'LBRACE':([0,1,3,6,7,8,19,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'OP_SUB':([16,],[22,]),'OP_MUL':([16,],[23,]),'OP_DIV':([16,],[24,]),'INPUT':([16,],[25,]),'RBRACE':([11,12,13,14,15,18,29,39,42,44,47,48,49,51,54,55,56,],[-28,-26,-27,-9,19,-8,-21,-11,-13,-20,-23,-24,-25,-10,-12,-22,-19,]),'OUTPUT':([16,],[26,]),'LPAREN':([0,1,3,6,7,8,9,11,12,13,14,15,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,47,48,49,50,51,54,55,56,58,],[5,5,-5,-4,-2,-3,16,-28,-26,-27,-9,16,-8,-7,16,16,16,16,40,40,16,-6,-21,16,-30,16,16,16,16,40,-15,-17,-11,40,-13,16,-20,-29,-23,-24,-25,-14,-10,-12,-22,-19,-16,]),'OP_ADD':([16,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([25,26,],[36,41,]),'expression':([9,15,20,22,23,24,27,30,32,33,34,35,43,],[14,18,31,31,31,31,31,45,46,45,45,45,45,]),'statement_list':([0,],[1,]),'type':([40,],[53,]),'declaration':([25,26,36,41,],[37,37,50,50,]),'expression_list':([9,],[15,]),'component':([0,1,],[3,7,]),'program':([0,],[4,]),'parameter_list':([20,22,23,24,27,],[30,33,34,35,43,]),'import_statement':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
