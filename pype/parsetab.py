
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'IMPORT':([3,],[7,]),'$end':([1,2,4,5,8,9,18,28,],[-5,0,-4,-1,-2,-3,-6,-7,]),'OP_SUB':([13,],[20,]),'LPAREN':([0,1,4,5,8,9,10,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[3,-5,-4,3,-2,-3,13,-9,-26,-28,-27,13,-6,13,13,13,35,13,13,35,-8,-7,-30,-21,13,13,13,-17,-15,-13,35,13,13,13,-11,35,-29,-20,-23,-22,-14,-12,-24,-25,-10,-19,-16,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,14,-9,19,-26,-28,-27,14,14,14,14,34,39,14,14,34,-8,-30,-21,14,14,14,-17,48,-15,-13,34,14,14,14,-11,34,-29,-20,-23,-22,-18,56,-14,-12,-24,-25,-10,-19,-16,]),'RPAREN':([11,14,15,16,19,22,26,29,30,31,32,33,34,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,30,37,42,-30,-21,45,46,47,-17,-15,-13,51,53,54,-11,55,-29,-20,-23,-22,-14,-12,57,-24,-25,-10,58,-19,-16,]),'STRING':([10,12,14,15,16,17,19,20,21,24,25,27,29,30,31,32,33,37,39,40,41,42,44,45,46,47,51,53,54,55,57,],[15,-9,-26,-28,-27,15,15,15,15,15,15,-8,-30,-21,15,15,15,-13,15,15,15,-11,-29,-20,-23,-22,-12,-24,-25,-10,-19,]),'OP_MUL':([13,],[24,]),'OUTPUT':([13,],[22,]),'ASSIGN':([13,],[23,]),'OP_ADD':([13,],[21,]),'NUMBER':([10,12,14,15,16,17,19,20,21,24,25,27,29,30,31,32,33,37,39,40,41,42,44,45,46,47,51,53,54,55,57,],[16,-9,-26,-28,-27,16,16,16,16,16,16,-8,-30,-21,16,16,16,-13,16,16,16,-11,-29,-20,-23,-22,-12,-24,-25,-10,-19,]),'OP_DIV':([13,],[25,]),'RBRACE':([12,14,15,16,17,27,30,37,42,45,46,47,51,53,54,55,57,],[-9,-26,-28,-27,28,-8,-21,-13,-11,-20,-23,-22,-12,-24,-25,-10,-19,]),'INPUT':([13,],[26,]),'LBRACE':([0,1,4,5,8,9,18,28,],[6,-5,-4,6,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[1,8,]),'program':([0,],[2,]),'expression_list':([10,],[17,]),'declaration':([22,26,38,43,],[36,36,50,50,]),'type':([35,],[49,]),'parameter_list':([19,20,21,24,25,],[31,32,33,40,41,]),'expression':([10,17,19,20,21,24,25,31,32,33,39,40,41,],[12,27,29,29,29,29,29,44,44,44,52,44,44,]),'import_statement':([0,5,],[4,9,]),'statement_list':([0,],[5,]),'declaration_list':([22,26,],[38,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
