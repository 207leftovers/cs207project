
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'ASSIGN':([13,],[19,]),'OP_SUB':([13,],[20,]),'NUMBER':([8,12,14,15,16,17,20,21,22,24,25,27,29,30,31,32,33,34,37,40,41,43,45,46,47,48,50,53,54,55,56,],[15,-26,-9,-27,15,-28,15,15,15,15,15,-8,15,-30,15,-21,15,15,-11,15,15,-13,-29,-23,-20,-24,-10,-25,-22,-12,-19,]),'OP_MUL':([13,],[22,]),'LPAREN':([0,4,5,6,8,9,10,12,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,45,46,47,48,49,50,53,54,55,56,58,],[2,-4,-5,2,13,-3,-2,-26,-9,-27,13,-28,-6,13,13,13,38,13,13,38,-8,-7,13,-30,13,-21,13,13,38,-15,-11,-17,13,13,38,-13,-29,-23,-20,-24,-14,-10,-25,-22,-12,-19,-16,]),'LBRACE':([0,4,5,6,9,10,18,28,],[3,-4,-5,3,-3,-2,-6,-7,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[8,11,12,-26,21,-9,-27,12,-28,29,12,12,12,39,12,12,39,-8,12,-30,12,-21,12,12,39,-15,-11,51,-17,12,12,39,-13,-29,-23,-20,-24,-14,-10,-18,57,-25,-22,-12,-19,-16,]),'INPUT':([13,],[23,]),'RBRACE':([12,14,15,16,17,27,32,37,43,46,47,48,50,53,54,55,56,],[-26,-9,-27,28,-28,-8,-21,-11,-13,-23,-20,-24,-10,-25,-22,-12,-19,]),'OP_DIV':([13,],[24,]),'$end':([1,4,5,6,9,10,18,28,],[0,-4,-5,-1,-3,-2,-6,-7,]),'RPAREN':([11,12,15,17,21,23,26,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-26,-27,-28,32,37,43,-30,46,-21,47,48,50,-15,-11,-17,53,54,55,-13,56,-29,-23,-20,-24,-14,-10,-25,-22,-12,-19,58,-16,]),'IMPORT':([2,],[7,]),'OP_ADD':([13,],[25,]),'STRING':([8,12,14,15,16,17,20,21,22,24,25,27,29,30,31,32,33,34,37,40,41,43,45,46,47,48,50,53,54,55,56,],[17,-26,-9,-27,17,-28,17,17,17,17,17,-8,17,-30,17,-21,17,17,-11,17,17,-13,-29,-23,-20,-24,-10,-25,-22,-12,-19,]),'OUTPUT':([13,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([23,26,],[35,42,]),'expression':([8,16,20,21,22,24,25,29,31,33,34,40,41,],[14,27,30,30,30,30,30,44,45,45,45,45,45,]),'declaration':([23,26,35,42,],[36,36,49,49,]),'type':([38,],[52,]),'parameter_list':([20,21,22,24,25,],[31,33,34,40,41,]),'expression_list':([8,],[16,]),'import_statement':([0,6,],[4,9,]),'component':([0,6,],[5,10,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
