
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'OP_DIV':([12,],[18,]),'RBRACE':([11,13,14,15,16,26,34,41,43,45,48,50,51,52,54,55,57,],[-9,27,-27,-26,-28,-8,-11,-21,-13,-25,-10,-24,-23,-22,-20,-12,-19,]),'$end':([3,4,5,6,9,10,27,28,],[-4,-1,0,-5,-3,-2,-7,-6,]),'ASSIGN':([12,],[23,]),'IMPORT':([2,],[8,]),'LPAREN':([0,3,4,6,7,9,10,11,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,54,55,57,58,],[2,-4,2,-5,12,-3,-2,-9,12,-27,-26,-28,12,31,12,12,12,12,31,-8,-7,-6,12,-30,-17,31,-11,-15,12,12,12,12,12,-21,31,-13,-29,-25,-10,-14,-24,-23,-22,-20,-12,-19,-16,]),'RPAREN':([14,15,16,17,19,24,25,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,34,41,43,45,-30,-17,48,-11,-15,50,51,52,54,-21,55,-13,-29,-25,-10,-14,-24,-23,-22,57,-20,-12,58,-19,-16,]),'OP_ADD':([12,],[22,]),'LBRACE':([0,3,4,6,9,10,27,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'OP_SUB':([12,],[21,]),'OUTPUT':([12,],[25,]),'NUMBER':([7,11,13,14,15,16,18,20,21,22,24,26,29,30,34,36,37,38,39,40,41,43,44,45,48,50,51,52,54,55,57,],[14,-9,14,-27,-26,-28,14,14,14,14,14,-8,14,-30,-11,14,14,14,14,14,-21,-13,-29,-25,-10,-24,-23,-22,-20,-12,-19,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,15,17,-9,24,15,-27,-26,-28,15,32,15,15,15,39,15,32,-8,15,-30,46,-17,32,-11,-15,15,15,15,15,15,-21,32,-13,-29,-25,-18,56,-10,-14,-24,-23,-22,-20,-12,-19,-16,]),'INPUT':([12,],[19,]),'STRING':([7,11,13,14,15,16,18,20,21,22,24,26,29,30,34,36,37,38,39,40,41,43,44,45,48,50,51,52,54,55,57,],[16,-9,16,-27,-26,-28,16,16,16,16,16,-8,16,-30,-11,16,16,16,16,16,-21,-13,-29,-25,-10,-24,-23,-22,-20,-12,-19,]),'OP_MUL':([12,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([19,25,],[33,42,]),'expression':([7,13,18,20,21,22,24,29,36,37,38,39,40,],[11,26,30,30,30,30,30,44,44,44,44,53,44,]),'expression_list':([7,],[13,]),'type':([31,],[47,]),'import_statement':([0,4,],[3,9,]),'statement_list':([0,],[4,]),'program':([0,],[5,]),'parameter_list':([18,20,21,22,24,],[29,36,37,38,40,]),'component':([0,4,],[6,10,]),'declaration':([19,25,33,42,],[35,35,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
