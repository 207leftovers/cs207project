
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'RBRACE':([12,13,14,15,16,27,33,36,43,44,47,49,52,53,54,55,56,],[-26,-27,-9,-28,26,-8,-21,-13,-11,-22,-20,-12,-25,-23,-24,-10,-19,]),'LBRACE':([0,2,4,6,9,10,26,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'$end':([2,3,4,6,9,10,26,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'OP_ADD':([11,],[18,]),'ASSIGN':([11,],[19,]),'LPAREN':([0,2,4,6,7,9,10,12,13,14,15,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,47,48,49,52,53,54,55,56,58,],[5,-5,-4,5,11,-2,-3,-26,-27,-9,-28,11,11,11,37,11,11,11,37,-7,-8,-6,11,-30,11,11,-21,-15,37,-13,-17,11,11,11,37,-11,-22,-29,-20,-14,-12,-25,-23,-24,-10,-19,-16,]),'NUMBER':([7,12,13,14,15,16,18,20,22,23,24,27,29,30,31,32,33,36,39,40,41,43,44,45,47,49,52,53,54,55,56,],[13,-26,-27,-9,-28,13,13,13,13,13,13,-8,13,-30,13,13,-21,-13,13,13,13,-11,-22,-29,-20,-12,-25,-23,-24,-10,-19,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[7,12,17,20,-26,-27,-9,-28,12,12,31,12,38,12,12,12,38,-8,12,-30,12,12,-21,-15,38,-13,50,-17,12,12,12,38,-11,-22,-29,-20,-14,-12,-18,57,-25,-23,-24,-10,-19,-16,]),'RPAREN':([12,13,15,17,20,21,25,29,30,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-26,-27,-28,28,33,36,43,44,-30,47,-21,-15,49,-13,-17,52,53,54,55,-11,-22,-29,56,-20,-14,-12,-25,-23,-24,-10,-19,58,-16,]),'OUTPUT':([11,],[21,]),'OP_DIV':([11,],[22,]),'OP_MUL':([11,],[24,]),'STRING':([7,12,13,14,15,16,18,20,22,23,24,27,29,30,31,32,33,36,39,40,41,43,44,45,47,49,52,53,54,55,56,],[15,-26,-27,-9,-28,15,15,15,15,15,15,-8,15,-30,15,15,-21,-13,15,15,15,-11,-22,-29,-20,-12,-25,-23,-24,-10,-19,]),'OP_SUB':([11,],[23,]),'INPUT':([11,],[25,]),'IMPORT':([5,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([37,],[51,]),'declaration':([21,25,35,42,],[34,34,48,48,]),'parameter_list':([18,20,22,23,24,],[29,32,39,40,41,]),'expression':([7,16,18,20,22,23,24,29,31,32,39,40,41,],[14,27,30,30,30,30,30,45,46,45,45,45,45,]),'component':([0,6,],[2,9,]),'program':([0,],[3,]),'import_statement':([0,6,],[4,10,]),'declaration_list':([21,25,],[35,42,]),'expression_list':([7,],[16,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
