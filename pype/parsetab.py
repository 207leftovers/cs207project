
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OUTPUT':([15,],[20,]),'INPUT':([15,],[21,]),'IMPORT':([6,],[10,]),'STRING':([9,11,12,13,14,16,19,22,23,25,26,27,32,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,54,55,57,],[11,-28,-9,11,-27,-26,-8,11,11,11,11,11,-13,-11,-30,11,11,11,11,11,-21,11,-12,-10,-24,-29,-23,-25,-22,-20,-19,]),'RBRACE':([11,12,13,14,16,19,32,35,42,47,48,49,51,53,54,55,57,],[-28,-9,18,-27,-26,-8,-13,-11,-21,-12,-10,-24,-23,-25,-22,-20,-19,]),'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[9,16,17,-28,-9,16,-27,27,-26,-8,31,31,16,16,39,16,16,16,-15,44,-17,-13,31,31,-11,-30,16,16,16,16,16,-21,16,-18,56,-14,-12,-10,-24,-29,-23,-25,-22,-20,-19,-16,]),'RPAREN':([11,14,16,17,20,21,27,29,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,32,35,42,-15,-17,-13,47,48,-11,-30,49,51,53,54,-21,55,-14,-12,-10,-24,-29,-23,57,-25,-22,-20,58,-19,-16,]),'OP_SUB':([15,],[23,]),'ASSIGN':([15,],[24,]),'LPAREN':([0,1,2,4,7,8,9,11,12,13,14,16,18,19,20,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,53,54,55,57,58,],[6,-5,-4,6,-2,-3,15,-28,-9,15,-27,-26,-7,-8,30,30,15,15,15,15,15,-6,-15,-17,-13,30,30,-11,-30,15,15,15,15,15,-21,15,-14,-12,-10,-24,-29,-23,-25,-22,-20,-19,-16,]),'OP_DIV':([15,],[25,]),'OP_ADD':([15,],[26,]),'$end':([1,2,3,4,7,8,18,28,],[-5,-4,0,-1,-2,-3,-7,-6,]),'LBRACE':([0,1,2,4,7,8,18,28,],[5,-5,-4,5,-2,-3,-7,-6,]),'OP_MUL':([15,],[22,]),'NUMBER':([9,11,12,13,14,16,19,22,23,25,26,27,32,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,54,55,57,],[14,-28,-9,14,-27,-26,-8,14,14,14,14,14,-13,-11,-30,14,14,14,14,14,-21,14,-12,-10,-24,-29,-23,-25,-22,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,4,],[1,7,]),'declaration':([20,21,33,34,],[29,29,46,46,]),'parameter_list':([22,23,25,26,27,],[37,38,40,41,43,]),'import_statement':([0,4,],[2,8,]),'expression_list':([9,],[13,]),'program':([0,],[3,]),'expression':([9,13,22,23,25,26,27,37,38,39,40,41,43,],[12,19,36,36,36,36,36,50,50,52,50,50,50,]),'type':([30,],[45,]),'statement_list':([0,],[4,]),'declaration_list':([20,21,],[33,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
