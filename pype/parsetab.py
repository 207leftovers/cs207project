
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'LPAREN':([0,3,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,58,],[1,-4,1,-5,12,-3,-2,-27,12,-26,-28,-9,-6,12,12,12,12,12,37,37,-8,-7,-21,12,-30,12,12,12,12,12,-17,-13,37,-15,-11,37,-20,-29,-22,-23,-25,-24,-12,-14,-10,-19,-16,]),'STRING':([8,13,14,15,16,17,19,20,21,22,23,27,29,30,31,32,33,34,35,36,39,42,44,45,46,47,48,49,53,55,56,],[16,-27,16,-26,-28,-9,16,16,16,16,16,-8,-21,16,-30,16,16,16,16,16,-13,-11,-20,-29,-22,-23,-25,-24,-12,-10,-19,]),'OUTPUT':([12,],[25,]),'ID':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,58,],[8,11,15,19,-27,15,-26,-28,-9,15,15,15,15,15,36,38,38,-8,-21,15,-30,15,15,15,15,15,51,-17,-13,38,-15,-11,38,-20,-29,-22,-23,-25,-24,-18,57,-12,-14,-10,-19,-16,]),'RPAREN':([11,13,15,16,19,25,26,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-27,-26,-28,29,39,42,-21,44,-30,46,47,48,49,-17,-13,53,-15,-11,55,-20,-29,-22,-23,-25,-24,56,-12,-14,-10,-19,58,-16,]),'OP_ADD':([12,],[20,]),'OP_SUB':([12,],[21,]),'IMPORT':([1,],[7,]),'$end':([3,4,5,6,9,10,18,28,],[-4,0,-1,-5,-3,-2,-6,-7,]),'NUMBER':([8,13,14,15,16,17,19,20,21,22,23,27,29,30,31,32,33,34,35,36,39,42,44,45,46,47,48,49,53,55,56,],[13,-27,13,-26,-28,-9,13,13,13,13,13,-8,-21,13,-30,13,13,13,13,13,-13,-11,-20,-29,-22,-23,-25,-24,-12,-10,-19,]),'OP_DIV':([12,],[22,]),'OP_MUL':([12,],[23,]),'ASSIGN':([12,],[24,]),'LBRACE':([0,3,5,6,9,10,18,28,],[2,-4,2,-5,-3,-2,-6,-7,]),'INPUT':([12,],[26,]),'RBRACE':([13,14,15,16,17,27,29,39,42,44,46,47,48,49,53,55,56,],[-27,28,-26,-28,-9,-8,-21,-13,-11,-20,-22,-23,-25,-24,-12,-10,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,20,21,22,23,],[30,32,33,34,35,]),'expression_list':([8,],[14,]),'import_statement':([0,5,],[3,9,]),'program':([0,],[4,]),'type':([37,],[52,]),'statement_list':([0,],[5,]),'declaration':([25,26,40,43,],[41,41,54,54,]),'declaration_list':([25,26,],[40,43,]),'component':([0,5,],[6,10,]),'expression':([8,14,19,20,21,22,23,30,32,33,34,35,36,],[17,27,31,31,31,31,31,45,45,45,45,45,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
