
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'OP_DIV':([14,],[19,]),'INPUT':([14,],[20,]),'RBRACE':([12,13,15,16,17,28,34,38,41,45,46,50,51,52,53,55,57,],[-28,-9,-26,-27,27,-8,-11,-21,-13,-25,-10,-24,-20,-22,-12,-23,-19,]),'IMPORT':([4,],[9,]),'$end':([1,2,3,5,7,8,18,27,],[-1,-5,-4,0,-2,-3,-6,-7,]),'NUMBER':([10,12,13,15,16,17,19,21,22,23,26,28,29,30,34,36,37,38,39,41,42,43,44,45,46,50,51,52,53,55,57,],[16,-28,-9,-26,-27,16,16,16,16,16,16,-8,16,-30,-11,16,16,-21,16,-13,16,16,-29,-25,-10,-24,-20,-22,-12,-23,-19,]),'LPAREN':([0,1,2,3,7,8,10,12,13,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,55,57,58,],[4,4,-5,-4,-2,-3,14,-28,-9,-26,-27,14,-6,14,33,14,14,14,33,14,-7,-8,14,-30,33,-17,-11,-15,14,14,-21,14,33,-13,14,14,-29,-25,-10,-14,-24,-20,-22,-12,-23,-19,-16,]),'OP_MUL':([14,],[21,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,15,-28,-9,22,-26,-27,15,15,32,15,15,15,32,42,15,-8,15,-30,32,-17,49,-11,-15,15,15,-21,15,32,-13,15,15,-29,-25,-10,-14,56,-18,-24,-20,-22,-12,-23,-19,-16,]),'STRING':([10,12,13,15,16,17,19,21,22,23,26,28,29,30,34,36,37,38,39,41,42,43,44,45,46,50,51,52,53,55,57,],[12,-28,-9,-26,-27,12,12,12,12,12,12,-8,12,-30,-11,12,12,-21,12,-13,12,12,-29,-25,-10,-24,-20,-22,-12,-23,-19,]),'LBRACE':([0,1,2,3,7,8,18,27,],[6,6,-5,-4,-2,-3,-6,-7,]),'OUTPUT':([14,],[24,]),'OP_ADD':([14,],[23,]),'ASSIGN':([14,],[25,]),'RPAREN':([11,12,15,16,20,22,24,29,30,31,32,34,35,36,37,38,39,40,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,34,38,41,45,-30,46,-17,-11,-15,50,51,-21,52,53,-13,55,-29,-25,-10,-14,-24,-20,-22,-12,57,-23,58,-19,-16,]),'OP_SUB':([14,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'component':([0,1,],[2,7,]),'expression_list':([10,],[17,]),'import_statement':([0,1,],[3,8,]),'parameter_list':([19,21,22,23,26,],[29,36,37,39,43,]),'declaration_list':([20,24,],[31,40,]),'expression':([10,17,19,21,22,23,26,29,36,37,39,42,43,],[13,28,30,30,30,30,30,44,44,44,44,54,44,]),'program':([0,],[5,]),'declaration':([20,24,31,40,],[35,35,47,47,]),'type':([33,],[48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
