
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'$end':([1,2,4,5,8,9,18,20,],[0,-4,-5,-1,-3,-2,-6,-7,]),'ID':([6,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,13,13,-26,-27,21,-9,-28,-8,13,13,13,13,13,37,37,43,-30,13,-21,13,13,13,13,-15,-17,50,37,-11,37,-13,13,-29,-20,-23,-22,-24,-25,-18,56,-14,-10,-12,-19,-16,]),'NUMBER':([10,12,13,14,16,17,19,21,22,23,24,25,29,30,31,32,33,34,35,40,42,43,44,45,46,47,48,49,53,54,57,],[14,14,-26,-27,-9,-28,-8,14,14,14,14,14,-30,14,-21,14,14,14,14,-11,-13,14,-29,-20,-23,-22,-24,-25,-10,-12,-19,]),'OP_SUB':([15,],[22,]),'LPAREN':([0,2,4,5,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,52,53,54,57,58,],[3,-4,-5,3,-3,-2,15,15,-26,-27,-9,-28,-6,-8,-7,15,15,15,15,15,38,38,-30,15,-21,15,15,15,15,-15,-17,38,-11,38,-13,15,-29,-20,-23,-22,-24,-25,-14,-10,-12,-19,-16,]),'IMPORT':([3,],[7,]),'LBRACE':([0,2,4,5,8,9,18,20,],[6,-4,-5,6,-3,-2,-6,-7,]),'STRING':([10,12,13,14,16,17,19,21,22,23,24,25,29,30,31,32,33,34,35,40,42,43,44,45,46,47,48,49,53,54,57,],[17,17,-26,-27,-9,-28,-8,17,17,17,17,17,-30,17,-21,17,17,17,17,-11,-13,17,-29,-20,-23,-22,-24,-25,-10,-12,-19,]),'OP_ADD':([15,],[23,]),'OP_DIV':([15,],[25,]),'OP_MUL':([15,],[24,]),'RBRACE':([12,13,14,16,17,19,31,40,42,45,46,47,48,49,53,54,57,],[20,-26,-27,-9,-28,-8,-21,-11,-13,-20,-23,-22,-24,-25,-10,-12,-19,]),'INPUT':([15,],[26,]),'OUTPUT':([15,],[27,]),'ASSIGN':([15,],[28,]),'RPAREN':([11,13,14,17,21,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-26,-27,-28,31,40,42,-30,45,-21,46,47,48,49,-15,-17,53,-11,54,-13,-29,-20,-23,-22,-24,-25,-14,-10,-12,57,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([10,],[12,]),'program':([0,],[1,]),'import_statement':([0,5,],[2,8,]),'declaration':([26,27,39,41,],[36,36,52,52,]),'declaration_list':([26,27,],[39,41,]),'expression':([10,12,21,22,23,24,25,30,32,33,34,35,43,],[16,19,29,29,29,29,29,44,44,44,44,44,55,]),'component':([0,5,],[4,9,]),'statement_list':([0,],[5,]),'parameter_list':([21,22,23,24,25,],[30,32,33,34,35,]),'type':([38,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
