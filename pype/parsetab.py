
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'INPUT':([12,],[19,]),'LPAREN':([0,2,5,6,7,8,10,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,57,58,],[3,3,-5,-4,-2,-3,12,-27,12,-28,-9,-26,-6,30,12,30,12,12,12,12,-7,-8,30,-15,-11,-17,-30,12,30,-13,12,12,12,-21,12,12,-14,-10,-22,-29,-12,-23,-24,-20,-25,-19,-16,]),'OP_ADD':([12,],[20,]),'OUTPUT':([12,],[21,]),'OP_MUL':([12,],[24,]),'RBRACE':([13,14,15,16,17,28,32,37,41,45,48,50,51,53,54,55,57,],[-27,27,-28,-9,-26,-8,-11,-13,-21,-10,-22,-12,-23,-24,-20,-25,-19,]),'OP_DIV':([12,],[26,]),'NUMBER':([10,13,14,15,16,17,20,22,24,25,26,28,32,34,35,37,38,39,40,41,42,43,45,48,49,50,51,53,54,55,57,],[13,-27,13,-28,-9,-26,13,13,13,13,13,-8,-11,-30,13,-13,13,13,13,-21,13,13,-10,-22,-29,-12,-23,-24,-20,-25,-19,]),'RPAREN':([11,13,15,17,19,21,25,29,31,32,33,34,35,36,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-28,-26,32,37,41,45,-15,-11,-17,-30,48,50,-13,51,53,-21,54,55,-14,-10,-22,-29,-12,-23,57,-24,-20,-25,58,-19,-16,]),'LBRACE':([0,2,5,6,7,8,18,27,],[4,4,-5,-4,-2,-3,-6,-7,]),'IMPORT':([3,],[9,]),'OP_SUB':([12,],[22,]),'STRING':([10,13,14,15,16,17,20,22,24,25,26,28,32,34,35,37,38,39,40,41,42,43,45,48,49,50,51,53,54,55,57,],[15,-27,15,-28,-9,-26,15,15,15,15,15,-8,-11,-30,15,-13,15,15,15,-21,15,15,-10,-22,-29,-12,-23,-24,-20,-25,-19,]),'ID':([4,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,17,25,-27,17,-28,-9,-26,33,17,33,17,39,17,17,17,-8,33,47,-15,-11,-17,-30,17,33,-13,17,17,17,-21,17,17,-14,-10,56,-18,-22,-29,-12,-23,-24,-20,-25,-19,-16,]),'$end':([1,2,5,6,7,8,18,27,],[0,-1,-5,-4,-2,-3,-6,-7,]),'ASSIGN':([12,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'declaration_list':([19,21,],[29,36,]),'component':([0,2,],[5,7,]),'declaration':([19,21,29,36,],[31,31,44,44,]),'import_statement':([0,2,],[6,8,]),'expression':([10,14,20,22,24,25,26,35,38,39,40,42,43,],[16,28,34,34,34,34,34,49,49,52,49,49,49,]),'expression_list':([10,],[14,]),'type':([30,],[46,]),'parameter_list':([20,22,24,25,26,],[35,38,40,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
