
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'INPUT':([13,],[18,]),'STRING':([9,11,12,14,15,16,19,21,22,23,24,26,33,34,35,36,37,38,39,40,41,43,45,48,49,51,52,53,54,55,57,],[12,-9,-28,-26,-27,12,12,12,12,12,12,-8,-11,-30,12,-21,12,12,12,12,12,-13,-10,-29,-20,-25,-23,-24,-22,-12,-19,]),'ID':([5,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,14,17,-9,-28,19,-26,-27,14,29,14,37,14,14,14,14,29,-8,-17,29,47,-15,-11,-30,14,-21,14,14,14,14,14,29,-13,-14,-10,56,-18,-29,-20,-25,-23,-24,-22,-12,-19,-16,]),'IMPORT':([6,],[10,]),'LBRACE':([0,1,2,3,7,8,27,28,],[5,-4,-5,5,-3,-2,-7,-6,]),'ASSIGN':([13,],[20,]),'OP_DIV':([13,],[21,]),'OP_SUB':([13,],[22,]),'OP_MUL':([13,],[23,]),'OP_ADD':([13,],[24,]),'RBRACE':([11,12,14,15,16,26,33,36,43,45,49,51,52,53,54,55,57,],[-9,-28,-26,-27,27,-8,-11,-21,-13,-10,-20,-25,-23,-24,-22,-12,-19,]),'RPAREN':([12,14,15,17,18,19,25,29,30,32,33,34,35,36,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,33,36,43,-17,45,-15,-11,-30,49,-21,51,52,53,54,55,-13,-14,-10,-29,-20,57,-25,-23,-24,-22,-12,58,-19,-16,]),'OUTPUT':([13,],[25,]),'$end':([1,2,3,4,7,8,27,28,],[-4,-5,-1,0,-3,-2,-7,-6,]),'LPAREN':([0,1,2,3,7,8,9,11,12,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,52,53,54,55,57,58,],[6,-4,-5,6,-3,-2,13,-9,-28,-26,-27,13,31,13,13,13,13,13,31,-8,-7,-6,-17,31,-15,-11,-30,13,-21,13,13,13,13,13,31,-13,-14,-10,-29,-20,-25,-23,-24,-22,-12,-19,-16,]),'NUMBER':([9,11,12,14,15,16,19,21,22,23,24,26,33,34,35,36,37,38,39,40,41,43,45,48,49,51,52,53,54,55,57,],[15,-9,-28,-26,-27,15,15,15,15,15,15,-8,-11,-30,15,-21,15,15,15,15,15,-13,-10,-29,-20,-25,-23,-24,-22,-12,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([9,16,19,21,22,23,24,35,37,38,39,40,41,],[11,26,34,34,34,34,34,48,50,48,48,48,48,]),'type':([31,],[46,]),'parameter_list':([19,21,22,23,24,],[35,38,39,40,41,]),'import_statement':([0,3,],[1,7,]),'component':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'program':([0,],[4,]),'declaration_list':([18,25,],[30,42,]),'expression_list':([9,],[16,]),'declaration':([18,25,30,42,],[32,32,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
