
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'OP_MUL':([13,],[22,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[10,11,12,-26,21,12,-9,-28,-27,12,31,12,12,39,12,12,39,-8,12,-30,12,12,-21,12,-15,49,-11,39,-17,12,12,-13,39,-29,-25,-20,-24,-18,57,-14,-10,-23,-22,-12,-19,-16,]),'LPAREN':([0,1,3,4,8,9,10,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,58,],[2,-5,2,-4,-3,-2,13,-26,13,-9,-28,-27,-6,13,13,13,36,13,13,36,-7,-8,13,-30,13,13,-21,13,-15,-11,36,-17,13,13,-13,36,-29,-25,-20,-24,-14,-10,-23,-22,-12,-19,-16,]),'OP_DIV':([13,],[19,]),'RBRACE':([12,14,15,16,17,28,33,37,42,45,47,48,52,53,54,55,56,],[-26,27,-9,-28,-27,-8,-21,-11,-13,-25,-20,-24,-10,-23,-22,-12,-19,]),'ASSIGN':([13,],[20,]),'OP_SUB':([13,],[24,]),'INPUT':([13,],[23,]),'IMPORT':([2,],[7,]),'RPAREN':([11,12,16,17,21,23,26,29,30,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,33,37,42,45,-30,47,-21,48,-15,-11,52,-17,53,54,-13,55,-29,-25,56,-20,-24,-14,-10,-23,-22,-12,-19,58,-16,]),'STRING':([10,12,14,15,16,17,19,21,22,24,25,28,29,30,31,32,33,34,37,40,41,42,44,45,47,48,52,53,54,55,56,],[16,-26,16,-9,-28,-27,16,16,16,16,16,-8,16,-30,16,16,-21,16,-11,16,16,-13,-29,-25,-20,-24,-10,-23,-22,-12,-19,]),'OUTPUT':([13,],[26,]),'OP_ADD':([13,],[25,]),'$end':([1,3,4,6,8,9,18,27,],[-5,-1,-4,0,-3,-2,-6,-7,]),'LBRACE':([0,1,3,4,8,9,18,27,],[5,-5,5,-4,-3,-2,-6,-7,]),'NUMBER':([10,12,14,15,16,17,19,21,22,24,25,28,29,30,31,32,33,34,37,40,41,42,44,45,47,48,52,53,54,55,56,],[17,-26,17,-9,-28,-27,17,17,17,17,17,-8,17,-30,17,17,-21,17,-11,17,17,-13,-29,-25,-20,-24,-10,-23,-22,-12,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,14,19,21,22,24,25,29,31,32,34,40,41,],[15,28,30,30,30,30,30,44,46,44,44,44,44,]),'declaration':([23,26,38,43,],[35,35,51,51,]),'component':([0,3,],[1,9,]),'type':([36,],[50,]),'statement_list':([0,],[3,]),'import_statement':([0,3,],[4,8,]),'declaration_list':([23,26,],[38,43,]),'parameter_list':([19,21,22,24,25,],[29,32,34,40,41,]),'expression_list':([10,],[14,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
