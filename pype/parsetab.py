
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'RPAREN':([11,14,15,17,24,27,28,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-26,-27,-28,33,37,42,-30,45,47,-21,48,49,50,-11,53,-17,-15,-13,55,56,-24,-29,-25,-20,-22,-23,-10,-14,-12,-19,58,-16,]),'ASSIGN':([16,],[21,]),'OP_MUL':([16,],[22,]),'RBRACE':([12,13,14,15,17,19,33,37,42,45,47,48,49,50,53,55,56,],[-9,20,-26,-27,-28,-8,-21,-11,-13,-24,-25,-20,-22,-23,-10,-12,-19,]),'$end':([1,3,4,6,8,9,18,20,],[-4,0,-1,-5,-3,-2,-6,-7,]),'OP_DIV':([16,],[23,]),'IMPORT':([2,],[7,]),'OP_ADD':([16,],[25,]),'LBRACE':([0,1,4,6,8,9,18,20,],[5,-4,5,-5,-3,-2,-6,-7,]),'OP_SUB':([16,],[26,]),'NUMBER':([10,12,13,14,15,17,19,22,23,24,25,26,29,30,31,32,33,34,35,36,37,42,45,46,47,48,49,50,53,55,56,],[15,-9,15,-26,-27,-28,-8,15,15,15,15,15,15,-30,15,15,-21,15,15,15,-11,-13,-24,-29,-25,-20,-22,-23,-10,-12,-19,]),'LPAREN':([0,1,4,6,8,9,10,12,13,14,15,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,45,46,47,48,49,50,53,54,55,56,58,],[2,-4,2,-5,-3,-2,16,-9,16,-26,-27,-28,-6,-8,-7,16,16,16,16,16,38,38,16,-30,16,16,-21,16,16,16,-11,38,-17,-15,-13,38,-24,-29,-25,-20,-22,-23,-10,-14,-12,-19,-16,]),'ID':([5,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,14,-9,14,-26,-27,24,-28,-8,29,14,14,14,14,14,40,40,14,-30,14,14,-21,14,14,14,-11,51,40,-17,-15,-13,40,-24,-29,-25,-20,-22,-23,-18,57,-10,-14,-12,-19,-16,]),'STRING':([10,12,13,14,15,17,19,22,23,24,25,26,29,30,31,32,33,34,35,36,37,42,45,46,47,48,49,50,53,55,56,],[17,-9,17,-26,-27,-28,-8,17,17,17,17,17,17,-30,17,17,-21,17,17,17,-11,-13,-24,-29,-25,-20,-22,-23,-10,-12,-19,]),'INPUT':([16,],[27,]),'OUTPUT':([16,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,13,22,23,24,25,26,29,31,32,34,35,36,],[12,19,30,30,30,30,30,44,46,46,46,46,46,]),'expression_list':([10,],[13,]),'import_statement':([0,4,],[1,8,]),'component':([0,4,],[6,9,]),'declaration_list':([27,28,],[39,43,]),'program':([0,],[3,]),'statement_list':([0,],[4,]),'declaration':([27,28,39,43,],[41,41,54,54,]),'parameter_list':([22,23,24,25,26,],[31,32,34,35,36,]),'type':([38,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
