
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'OP_SUB':([13,],[18,]),'STRING':([7,11,12,14,15,16,18,19,20,22,23,27,29,30,31,32,33,35,39,40,41,43,44,45,46,47,50,52,53,54,57,],[11,-28,-26,-9,11,-27,11,11,11,11,11,-8,11,-30,11,11,-21,-11,11,11,-13,11,-23,-29,-24,-20,-10,-25,-22,-12,-19,]),'IMPORT':([2,],[8,]),'RBRACE':([11,12,14,15,16,27,33,35,41,44,46,47,50,52,53,54,57,],[-28,-26,-9,26,-27,-8,-21,-11,-13,-23,-24,-20,-10,-25,-22,-12,-19,]),'$end':([3,4,5,6,9,10,26,28,],[0,-5,-4,-1,-2,-3,-7,-6,]),'OP_MUL':([13,],[19,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,12,17,-28,-26,20,-9,12,-27,12,12,12,37,12,12,37,43,-8,12,-30,12,12,-21,49,-11,37,-17,-15,12,12,-13,37,12,-23,-29,-24,-20,56,-18,-10,-14,-25,-22,-12,-19,-16,]),'LBRACE':([0,4,5,6,9,10,26,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'LPAREN':([0,4,5,6,7,9,10,11,12,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,57,58,],[2,-5,-4,2,13,-2,-3,-28,-26,-9,13,-27,13,13,13,34,13,13,34,-7,-8,-6,13,-30,13,13,-21,-11,34,-17,-15,13,13,-13,34,13,-23,-29,-24,-20,-10,-14,-25,-22,-12,-19,-16,]),'INPUT':([13,],[21,]),'ASSIGN':([13,],[25,]),'RPAREN':([11,12,16,17,20,21,24,29,30,31,32,33,35,36,37,38,39,40,41,42,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,33,35,41,44,-30,46,47,-21,-11,50,-17,-15,52,53,-13,54,-23,-29,-24,-20,-10,-14,-25,-22,-12,57,58,-19,-16,]),'OP_ADD':([13,],[23,]),'OUTPUT':([13,],[24,]),'OP_DIV':([13,],[22,]),'NUMBER':([7,11,12,14,15,16,18,19,20,22,23,27,29,30,31,32,33,35,39,40,41,43,44,45,46,47,50,52,53,54,57,],[16,-28,-26,-9,16,-27,16,16,16,16,16,-8,16,-30,16,16,-21,-11,16,16,-13,16,-23,-29,-24,-20,-10,-25,-22,-12,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([21,24,],[36,42,]),'type':([34,],[48,]),'program':([0,],[3,]),'component':([0,6,],[4,9,]),'import_statement':([0,6,],[5,10,]),'parameter_list':([18,19,20,22,23,],[29,31,32,39,40,]),'expression_list':([7,],[15,]),'statement_list':([0,],[6,]),'expression':([7,15,18,19,20,22,23,29,31,32,39,40,43,],[14,27,30,30,30,30,30,45,45,45,45,45,55,]),'declaration':([21,24,36,42,],[38,38,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
