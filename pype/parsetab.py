
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OP_MUL':([16,],[23,]),'IMPORT':([3,],[9,]),'ASSIGN':([16,],[21,]),'NUMBER':([10,12,13,14,15,17,19,23,24,26,27,28,29,34,35,36,37,38,40,41,42,43,46,49,50,51,52,53,54,55,56,],[14,-28,-9,-27,14,-26,-8,14,14,14,14,14,14,-11,-30,14,14,-13,14,-21,14,14,-10,-29,-24,-22,-12,-23,-20,-25,-19,]),'RPAREN':([11,12,14,17,22,25,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,34,38,41,-15,46,-17,-11,-30,50,51,-13,52,53,-21,54,55,56,-14,-10,-29,-24,-22,-12,-23,-20,-25,-19,58,-16,]),'LBRACE':([0,2,4,5,7,8,18,20,],[6,6,-4,-5,-3,-2,-6,-7,]),'RBRACE':([12,13,14,15,17,19,34,38,41,46,50,51,52,53,54,55,56,],[-28,-9,-27,20,-26,-8,-11,-13,-21,-10,-24,-22,-12,-23,-20,-25,-19,]),'OP_ADD':([16,],[24,]),'OUTPUT':([16,],[25,]),'$end':([1,2,4,5,7,8,18,20,],[0,-1,-4,-5,-3,-2,-6,-7,]),'INPUT':([16,],[22,]),'OP_SUB':([16,],[26,]),'LPAREN':([0,2,4,5,7,8,10,12,13,14,15,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[3,3,-4,-5,-3,-2,16,-28,-9,-27,16,-26,-6,-8,-7,33,16,16,33,16,16,16,16,-15,33,-17,-11,-30,16,16,-13,33,16,-21,16,16,-14,-10,-29,-24,-22,-12,-23,-20,-25,-19,-16,]),'ID':([6,9,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,17,-28,-9,-27,17,27,-26,-8,29,32,17,17,32,17,17,17,17,-15,32,-17,48,-11,-30,17,17,-13,32,17,-21,17,17,-14,-10,57,-18,-29,-24,-22,-12,-23,-20,-25,-19,-16,]),'STRING':([10,12,13,14,15,17,19,23,24,26,27,28,29,34,35,36,37,38,40,41,42,43,46,49,50,51,52,53,54,55,56,],[12,-28,-9,-27,12,-26,-8,12,12,12,12,12,12,-11,-30,12,12,-13,12,-21,12,12,-10,-29,-24,-22,-12,-23,-20,-25,-19,]),'OP_DIV':([16,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([22,25,31,39,],[30,30,45,45,]),'program':([0,],[1,]),'declaration_list':([22,25,],[31,39,]),'type':([33,],[47,]),'expression_list':([10,],[15,]),'expression':([10,15,23,24,26,27,28,29,36,37,40,42,43,],[13,19,35,35,35,35,35,44,49,49,49,49,49,]),'statement_list':([0,],[2,]),'import_statement':([0,2,],[4,7,]),'component':([0,2,],[5,8,]),'parameter_list':([23,24,26,27,28,],[36,37,40,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
