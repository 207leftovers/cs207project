
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'IMPORT':([5,],[10,]),'ASSIGN':([16,],[20,]),'RBRACE':([11,12,13,14,15,19,31,39,40,46,50,51,52,53,54,55,56,],[18,-28,-27,-9,-26,-8,-11,-21,-13,-10,-23,-22,-20,-12,-24,-25,-19,]),'LBRACE':([0,1,4,6,8,9,18,28,],[3,-5,3,-4,-2,-3,-7,-6,]),'INPUT':([16,],[21,]),'NUMBER':([7,11,12,13,14,15,19,22,23,24,26,27,29,31,35,36,37,38,39,40,42,43,46,49,50,51,52,53,54,55,56,],[13,13,-28,-27,-9,-26,-8,13,13,13,13,13,13,-11,13,-30,13,13,-21,-13,13,13,-10,-29,-23,-22,-20,-12,-24,-25,-19,]),'OP_DIV':([16,],[27,]),'OP_ADD':([16,],[23,]),'OP_SUB':([16,],[22,]),'ID':([3,7,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[7,15,17,15,-28,-27,-9,-26,24,-8,29,33,15,15,15,33,15,15,15,-15,-11,33,-17,47,15,-30,15,15,-21,-13,33,15,15,-14,-10,-18,57,-29,-23,-22,-20,-12,-24,-25,-19,-16,]),'OP_MUL':([16,],[26,]),'STRING':([7,11,12,13,14,15,19,22,23,24,26,27,29,31,35,36,37,38,39,40,42,43,46,49,50,51,52,53,54,55,56,],[12,12,-28,-27,-9,-26,-8,12,12,12,12,12,12,-11,12,-30,12,12,-21,-13,12,12,-10,-29,-23,-22,-20,-12,-24,-25,-19,]),'RPAREN':([12,13,15,17,21,24,25,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,31,39,40,-15,-11,46,-17,50,-30,51,52,-21,-13,53,54,55,56,-14,-10,-29,-23,-22,-20,-12,-24,-25,-19,58,-16,]),'LPAREN':([0,1,4,6,7,8,9,11,12,13,14,15,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[5,-5,5,-4,16,-2,-3,16,-28,-27,-9,-26,-7,-8,34,16,16,16,34,16,16,-6,16,-15,-11,34,-17,16,-30,16,16,-21,-13,34,16,16,-14,-10,-29,-23,-22,-20,-12,-24,-25,-19,-16,]),'$end':([1,2,4,6,8,9,18,28,],[-5,0,-1,-4,-2,-3,-7,-6,]),'OUTPUT':([16,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[11,]),'component':([0,4,],[1,8,]),'declaration':([21,25,32,41,],[30,30,45,45,]),'program':([0,],[2,]),'declaration_list':([21,25,],[32,41,]),'parameter_list':([22,23,24,26,27,],[35,37,38,42,43,]),'statement_list':([0,],[4,]),'type':([34,],[48,]),'import_statement':([0,4,],[6,9,]),'expression':([7,11,22,23,24,26,27,29,35,37,38,42,43,],[14,19,36,36,36,36,36,44,49,49,49,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
