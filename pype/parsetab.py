
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OUTPUT':([16,],[21,]),'ID':([3,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[8,11,12,-26,12,-9,-27,22,-28,-8,30,12,12,12,39,30,12,12,44,-17,-15,30,-13,-21,-30,12,12,12,12,30,-11,12,12,-18,56,-14,-12,-20,-29,-23,-24,-10,-25,-22,-19,-16,]),'OP_SUB':([16,],[23,]),'INPUT':([16,],[26,]),'NUMBER':([8,12,13,14,15,17,19,22,23,24,27,28,33,34,35,36,37,38,39,41,42,43,47,48,49,50,51,53,54,55,57,],[15,-26,15,-9,-27,-28,-8,15,15,15,15,15,-13,-21,-30,15,15,15,15,-11,15,15,-12,-20,-29,-23,-24,-10,-25,-22,-19,]),'LBRACE':([0,2,5,6,9,10,18,20,],[3,-5,-4,3,-2,-3,-6,-7,]),'OP_MUL':([16,],[24,]),'ASSIGN':([16,],[25,]),'RPAREN':([11,12,15,17,21,22,26,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,33,34,41,-17,-15,47,-13,-21,-30,48,50,51,53,-11,54,55,-14,-12,-20,-29,-23,-24,57,-10,-25,-22,58,-19,-16,]),'IMPORT':([1,],[7,]),'LPAREN':([0,2,5,6,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,53,54,55,57,58,],[1,-5,-4,1,16,-2,-3,-26,16,-9,-27,-28,-6,-8,-7,29,16,16,16,29,16,16,-17,-15,29,-13,-21,-30,16,16,16,16,29,-11,16,16,-14,-12,-20,-29,-23,-24,-10,-25,-22,-19,-16,]),'$end':([2,4,5,6,9,10,18,20,],[-5,0,-4,-1,-2,-3,-6,-7,]),'OP_DIV':([16,],[27,]),'RBRACE':([12,13,14,15,17,19,33,34,41,47,48,50,51,53,54,55,57,],[-26,20,-9,-27,-28,-8,-13,-21,-11,-12,-20,-23,-24,-10,-25,-22,-19,]),'OP_ADD':([16,],[28,]),'STRING':([8,12,13,14,15,17,19,22,23,24,27,28,33,34,35,36,37,38,39,41,42,43,47,48,49,50,51,53,54,55,57,],[17,-26,17,-9,-27,-28,-8,17,17,17,17,17,-13,-21,-30,17,17,17,17,-11,17,17,-12,-20,-29,-23,-24,-10,-25,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([8,13,22,23,24,27,28,36,37,38,39,42,43,],[14,19,35,35,35,35,35,49,49,49,52,49,49,]),'declaration_list':([21,26,],[32,40,]),'type':([29,],[45,]),'parameter_list':([22,23,24,27,28,],[36,37,38,42,43,]),'program':([0,],[4,]),'expression_list':([8,],[13,]),'component':([0,6,],[2,9,]),'import_statement':([0,6,],[5,10,]),'declaration':([21,26,32,40,],[31,31,46,46,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
