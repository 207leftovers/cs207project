
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'IMPORT':([1,],[7,]),'OP_ADD':([12,],[20,]),'LBRACE':([0,2,5,6,8,9,18,27,],[4,4,-4,-5,-3,-2,-6,-7,]),'RPAREN':([11,13,15,16,21,24,26,29,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,32,40,42,44,-30,46,-11,-17,-15,49,51,52,53,-21,-13,55,-25,-29,-22,-10,-14,-24,-23,-20,57,-12,58,-19,-16,]),'LPAREN':([0,2,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,55,57,58,],[1,1,-4,-5,-3,-2,12,-28,12,-27,-26,-9,-6,12,12,33,12,12,12,33,-7,-8,12,-30,12,-11,-17,-15,33,12,12,12,-21,12,-13,33,-25,-29,-22,-10,-14,-24,-23,-20,-12,-19,-16,]),'OP_DIV':([12,],[19,]),'STRING':([10,13,14,15,16,17,19,20,22,23,24,28,29,30,31,32,37,38,39,40,41,42,44,45,46,49,51,52,53,55,57,],[13,-28,13,-27,-26,-9,13,13,13,13,13,-8,13,-30,13,-11,13,13,13,-21,13,-13,-25,-29,-22,-10,-24,-23,-20,-12,-19,]),'OP_MUL':([12,],[22,]),'$end':([2,3,5,6,8,9,18,27,],[-1,0,-4,-5,-3,-2,-6,-7,]),'RBRACE':([13,14,15,16,17,28,32,40,42,44,46,49,51,52,53,55,57,],[-28,27,-27,-26,-9,-8,-11,-21,-13,-25,-22,-10,-24,-23,-20,-12,-19,]),'NUMBER':([10,13,14,15,16,17,19,20,22,23,24,28,29,30,31,32,37,38,39,40,41,42,44,45,46,49,51,52,53,55,57,],[15,-28,15,-27,-26,-9,15,15,15,15,15,-8,15,-30,15,-11,15,15,15,-21,15,-13,-25,-29,-22,-10,-24,-23,-20,-12,-19,]),'OP_SUB':([12,],[23,]),'ID':([4,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,16,24,-28,16,-27,-26,-9,16,16,34,16,16,16,41,34,-8,16,-30,16,-11,47,-17,-15,34,16,16,16,-21,16,-13,34,-25,-29,-22,-18,56,-10,-14,-24,-23,-20,-12,-19,-16,]),'ASSIGN':([12,],[25,]),'INPUT':([12,],[21,]),'OUTPUT':([12,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,20,22,23,24,],[29,31,37,38,39,]),'expression_list':([10,],[14,]),'declaration_list':([21,26,],[36,43,]),'type':([33,],[48,]),'statement_list':([0,],[2,]),'program':([0,],[3,]),'expression':([10,14,19,20,22,23,24,29,31,37,38,39,41,],[17,28,30,30,30,30,30,45,45,45,45,45,54,]),'import_statement':([0,2,],[5,8,]),'declaration':([21,26,36,43,],[35,35,50,50,]),'component':([0,2,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
