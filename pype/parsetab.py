
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'OP_DIV':([13,],[19,]),'ID':([4,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,12,-26,20,-28,-27,12,-9,12,12,12,12,39,12,41,39,-8,12,-30,-21,12,12,12,50,39,-15,-11,-17,12,12,-13,39,-25,-29,-20,-22,-24,56,-18,-14,-10,-23,-12,-19,-16,]),'$end':([1,3,5,6,9,10,18,27,],[-5,-4,-1,0,-2,-3,-6,-7,]),'LPAREN':([0,1,3,5,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,57,58,],[2,-5,-4,2,13,-2,-3,-26,-28,-27,13,-9,-6,13,13,13,13,35,13,35,-7,-8,13,-30,-21,13,13,13,35,-15,-11,-17,13,13,-13,35,-25,-29,-20,-22,-24,-14,-10,-23,-12,-19,-16,]),'STRING':([8,12,14,15,16,17,19,20,21,22,24,28,29,30,31,32,33,34,38,40,41,42,44,45,46,47,48,52,53,55,57,],[14,-26,-28,-27,14,-9,14,14,14,14,14,-8,14,-30,-21,14,14,14,-11,14,14,-13,-25,-29,-20,-22,-24,-10,-23,-12,-19,]),'NUMBER':([8,12,14,15,16,17,19,20,21,22,24,28,29,30,31,32,33,34,38,40,41,42,44,45,46,47,48,52,53,55,57,],[15,-26,-28,-27,15,-9,15,15,15,15,15,-8,15,-30,-21,15,15,15,-11,15,15,-13,-25,-29,-20,-22,-24,-10,-23,-12,-19,]),'LBRACE':([0,1,3,5,9,10,18,27,],[4,-5,-4,4,-2,-3,-6,-7,]),'RBRACE':([12,14,15,16,17,28,31,38,42,44,46,47,48,52,53,55,57,],[-26,-28,-27,27,-9,-8,-21,-11,-13,-25,-20,-22,-24,-10,-23,-12,-19,]),'RPAREN':([11,12,14,15,20,23,26,29,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,31,38,42,44,-30,-21,46,47,48,52,-15,-11,-17,53,-13,55,-25,-29,-20,-22,-24,-14,-10,-23,57,-12,58,-19,-16,]),'IMPORT':([2,],[7,]),'OP_MUL':([13,],[22,]),'INPUT':([13,],[23,]),'ASSIGN':([13,],[25,]),'OP_SUB':([13,],[24,]),'OUTPUT':([13,],[26,]),'OP_ADD':([13,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([35,],[49,]),'expression_list':([8,],[16,]),'component':([0,5,],[1,9,]),'program':([0,],[6,]),'import_statement':([0,5,],[3,10,]),'declaration_list':([23,26,],[36,43,]),'expression':([8,16,19,20,21,22,24,29,32,33,34,40,41,],[17,28,30,30,30,30,30,45,45,45,45,45,54,]),'declaration':([23,26,36,43,],[37,37,51,51,]),'parameter_list':([19,20,21,22,24,],[29,32,33,34,40,]),'statement_list':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
