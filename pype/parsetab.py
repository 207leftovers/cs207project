
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'RPAREN':([11,12,15,17,19,20,26,29,30,31,32,34,35,36,37,38,39,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,29,32,42,-21,-30,44,-11,48,-17,-15,50,51,52,54,-13,55,-20,-29,-10,-14,-22,-24,-25,57,-23,-12,58,-19,-16,]),'$end':([1,2,4,5,7,8,18,28,],[-1,-4,-5,0,-3,-2,-6,-7,]),'STRING':([10,12,14,15,16,17,19,21,22,23,25,27,29,30,31,32,37,38,39,40,41,42,44,45,48,50,51,52,54,55,57,],[12,-28,12,-26,-9,-27,12,12,12,12,12,-8,-21,-30,12,-11,12,12,12,12,12,-13,-20,-29,-10,-22,-24,-25,-23,-12,-19,]),'LPAREN':([0,1,2,4,7,8,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,54,55,57,58,],[3,3,-4,-5,-3,-2,13,-28,13,-26,-9,-27,-6,13,33,13,13,13,13,33,-8,-7,-21,-30,13,-11,33,-17,-15,13,13,13,13,13,-13,33,-20,-29,-10,-14,-22,-24,-25,-23,-12,-19,-16,]),'NUMBER':([10,12,14,15,16,17,19,21,22,23,25,27,29,30,31,32,37,38,39,40,41,42,44,45,48,50,51,52,54,55,57,],[17,-28,17,-26,-9,-27,17,17,17,17,17,-8,-21,-30,17,-11,17,17,17,17,17,-13,-20,-29,-10,-22,-24,-25,-23,-12,-19,]),'OP_ADD':([13,],[21,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[10,11,15,-28,19,15,-26,-9,-27,15,35,15,15,15,40,15,35,-8,-21,-30,15,-11,46,35,-17,-15,15,15,15,15,15,-13,35,-20,-29,-18,56,-10,-14,-22,-24,-25,-23,-12,-19,-16,]),'OP_MUL':([13,],[22,]),'OP_DIV':([13,],[23,]),'RBRACE':([12,14,15,16,17,27,29,32,42,44,48,50,51,52,54,55,57,],[-28,28,-26,-9,-27,-8,-21,-11,-13,-20,-10,-22,-24,-25,-23,-12,-19,]),'IMPORT':([3,],[9,]),'LBRACE':([0,1,2,4,7,8,18,28,],[6,6,-4,-5,-3,-2,-6,-7,]),'ASSIGN':([13,],[24,]),'INPUT':([13,],[20,]),'OP_SUB':([13,],[25,]),'OUTPUT':([13,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'import_statement':([0,1,],[2,7,]),'type':([33,],[47,]),'parameter_list':([19,21,22,23,25,],[31,37,38,39,41,]),'declaration_list':([20,26,],[34,43,]),'component':([0,1,],[4,8,]),'expression_list':([10,],[14,]),'declaration':([20,26,34,43,],[36,36,49,49,]),'program':([0,],[5,]),'expression':([10,14,19,21,22,23,25,31,37,38,39,40,41,],[16,27,30,30,30,30,30,45,45,45,45,53,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
