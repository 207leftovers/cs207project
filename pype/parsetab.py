
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'IMPORT':([2,],[9,]),'LPAREN':([0,1,4,6,7,8,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,58,],[2,2,-5,-4,-2,-3,12,-27,12,-26,-28,-9,-6,12,12,12,12,37,37,12,-7,-8,-30,12,12,12,-21,12,12,37,-17,-11,-15,37,-13,12,-22,-29,-25,-20,-24,-10,-14,-12,-23,-19,-16,]),'RBRACE':([13,14,15,16,17,28,33,39,42,44,46,48,49,50,54,55,56,],[-27,27,-26,-28,-9,-8,-21,-11,-13,-22,-25,-20,-24,-10,-12,-23,-19,]),'LBRACE':([0,1,4,6,7,8,18,27,],[5,5,-5,-4,-2,-3,-6,-7,]),'OP_ADD':([12,],[19,]),'RPAREN':([11,13,15,16,22,24,25,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[18,-27,-26,-28,33,39,42,-30,44,46,-21,48,49,50,-17,-11,-15,54,-13,55,-22,-29,-25,56,-20,-24,-10,-14,-12,-23,-19,58,-16,]),'OP_DIV':([12,],[20,]),'ASSIGN':([12,],[21,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[10,11,15,22,-27,15,-26,-28,-9,15,15,32,15,15,38,38,15,-8,-30,15,15,15,-21,15,15,38,53,-17,-11,-15,38,-13,15,-22,-29,-25,-20,-24,-10,-14,57,-18,-12,-23,-19,-16,]),'OP_MUL':([12,],[23,]),'STRING':([10,13,14,15,16,17,19,20,22,23,26,28,29,30,31,32,33,34,35,39,42,43,44,45,46,48,49,50,54,55,56,],[16,-27,16,-26,-28,-9,16,16,16,16,16,-8,-30,16,16,16,-21,16,16,-11,-13,16,-22,-29,-25,-20,-24,-10,-12,-23,-19,]),'INPUT':([12,],[24,]),'OUTPUT':([12,],[25,]),'NUMBER':([10,13,14,15,16,17,19,20,22,23,26,28,29,30,31,32,33,34,35,39,42,43,44,45,46,48,49,50,54,55,56,],[13,-27,13,-26,-28,-9,13,13,13,13,13,-8,-30,13,13,13,-21,13,13,-11,-13,13,-22,-29,-25,-20,-24,-10,-12,-23,-19,]),'$end':([1,3,4,6,7,8,18,27,],[-1,0,-5,-4,-2,-3,-6,-7,]),'OP_SUB':([12,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'program':([0,],[3,]),'component':([0,1,],[4,7,]),'type':([37,],[52,]),'expression_list':([10,],[14,]),'parameter_list':([19,20,22,23,26,],[30,31,34,35,43,]),'declaration_list':([24,25,],[36,41,]),'expression':([10,14,19,20,22,23,26,30,31,32,34,35,43,],[17,28,29,29,29,29,29,45,45,47,45,45,45,]),'declaration':([24,25,36,41,],[40,40,51,51,]),'import_statement':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
