
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'LPAREN':([0,1,5,6,7,9,10,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,52,53,54,55,56,58,],[3,-5,3,-4,11,-2,-3,11,-26,-9,-28,-27,11,11,36,11,36,11,11,-8,-7,-6,-30,-21,11,11,11,36,-15,-13,-17,11,36,-11,11,11,-29,-20,-25,-14,-12,-23,-10,-22,-24,-19,-16,]),'OUTPUT':([11,],[21,]),'OP_DIV':([11,],[19,]),'LBRACE':([0,1,5,6,9,10,27,28,],[2,-5,2,-4,-2,-3,-7,-6,]),'IMPORT':([3,],[8,]),'ID':([2,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[7,13,17,18,13,-26,-9,-28,-27,13,13,33,38,13,38,13,13,-8,-30,-21,13,13,13,38,-15,50,-13,-17,13,38,-11,13,13,-29,-20,-25,-14,-12,-18,57,-23,-10,-22,-24,-19,-16,]),'OP_SUB':([11,],[22,]),'INPUT':([11,],[23,]),'OP_MUL':([11,],[25,]),'RBRACE':([12,13,14,15,16,26,30,37,41,45,46,49,52,53,54,55,56,],[27,-26,-9,-28,-27,-8,-21,-13,-11,-20,-25,-12,-23,-10,-22,-24,-19,]),'RPAREN':([13,15,16,17,18,21,23,29,30,31,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-26,-28,-27,28,30,37,41,-30,-21,45,46,49,-15,-13,-17,52,53,-11,54,55,-29,-20,-25,56,-14,-12,-23,-10,-22,-24,-19,58,-16,]),'STRING':([7,12,13,14,15,16,18,19,22,24,25,26,29,30,31,32,33,37,39,41,42,43,44,45,46,49,52,53,54,55,56,],[15,15,-26,-9,-28,-27,15,15,15,15,15,-8,-30,-21,15,15,15,-13,15,-11,15,15,-29,-20,-25,-12,-23,-10,-22,-24,-19,]),'ASSIGN':([11,],[20,]),'$end':([1,4,5,6,9,10,27,28,],[-5,0,-1,-4,-2,-3,-7,-6,]),'OP_ADD':([11,],[24,]),'NUMBER':([7,12,13,14,15,16,18,19,22,24,25,26,29,30,31,32,33,37,39,41,42,43,44,45,46,49,52,53,54,55,56,],[16,16,-26,-9,-28,-27,16,16,16,16,16,-8,-30,-21,16,16,16,-13,16,-11,16,16,-29,-20,-25,-12,-23,-10,-22,-24,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[1,9,]),'declaration_list':([21,23,],[34,40,]),'declaration':([21,23,34,40,],[35,35,48,48,]),'expression':([7,12,18,19,22,24,25,31,32,33,39,42,43,],[14,26,29,29,29,29,29,44,44,47,44,44,44,]),'type':([36,],[51,]),'expression_list':([7,],[12,]),'program':([0,],[4,]),'parameter_list':([18,19,22,24,25,],[31,32,39,42,43,]),'statement_list':([0,],[5,]),'import_statement':([0,5,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
