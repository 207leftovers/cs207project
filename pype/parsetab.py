
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'INPUT':([15,],[21,]),'IMPORT':([2,],[7,]),'ID':([3,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,13,13,-26,-28,25,-9,-27,-8,30,13,13,13,13,13,41,30,-11,-17,30,46,-15,-30,13,13,13,-21,13,13,13,-13,30,-10,-14,-18,56,-29,-25,-22,-23,-20,-24,-12,-19,-16,]),'STRING':([8,12,13,14,16,17,19,22,23,24,25,26,29,34,35,36,37,38,39,40,41,42,44,48,49,50,51,52,53,55,57,],[14,14,-26,-28,-9,-27,-8,14,14,14,14,14,-11,-30,14,14,14,-21,14,14,14,-13,-10,-29,-25,-22,-23,-20,-24,-12,-19,]),'LPAREN':([0,1,5,6,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[2,-5,2,-4,15,-2,-3,15,-26,-28,-9,-27,-6,-8,-7,32,15,15,15,15,15,32,-11,-17,32,-15,-30,15,15,15,-21,15,15,15,-13,32,-10,-14,-29,-25,-22,-23,-20,-24,-12,-19,-16,]),'OP_ADD':([15,],[23,]),'ASSIGN':([15,],[27,]),'RPAREN':([11,13,14,17,21,25,28,29,30,31,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,29,38,42,-11,-17,44,-15,-30,49,50,51,-21,52,53,-13,55,-10,-14,-29,-25,-22,-23,-20,-24,57,-12,58,-19,-16,]),'LBRACE':([0,1,5,6,9,10,18,20,],[3,-5,3,-4,-2,-3,-6,-7,]),'RBRACE':([12,13,14,16,17,19,29,38,42,44,49,50,51,52,53,55,57,],[20,-26,-28,-9,-27,-8,-11,-21,-13,-10,-25,-22,-23,-20,-24,-12,-19,]),'OP_DIV':([15,],[22,]),'NUMBER':([8,12,13,14,16,17,19,22,23,24,25,26,29,34,35,36,37,38,39,40,41,42,44,48,49,50,51,52,53,55,57,],[17,17,-26,-28,-9,-27,-8,17,17,17,17,17,-11,-30,17,17,17,-21,17,17,17,-13,-10,-29,-25,-22,-23,-20,-24,-12,-19,]),'OP_SUB':([15,],[24,]),'OP_MUL':([15,],[26,]),'$end':([1,4,5,6,9,10,18,20,],[-5,0,-1,-4,-2,-3,-6,-7,]),'OUTPUT':([15,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[1,9,]),'expression_list':([8,],[12,]),'parameter_list':([22,23,24,25,26,],[35,36,37,39,40,]),'program':([0,],[4,]),'type':([32,],[47,]),'declaration_list':([21,28,],[31,43,]),'statement_list':([0,],[5,]),'expression':([8,12,22,23,24,25,26,35,36,37,39,40,41,],[16,19,34,34,34,34,34,48,48,48,48,48,54,]),'import_statement':([0,5,],[6,10,]),'declaration':([21,28,31,43,],[33,33,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',101),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',107),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',116),
  ('expression -> STRING','expression',1,'p_string','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
