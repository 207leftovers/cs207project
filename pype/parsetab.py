
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'LBRACE':([0,3,4,5,9,10,26,28,],[1,1,-4,-5,-3,-2,-7,-6,]),'OP_SUB':([11,],[21,]),'OP_DIV':([11,],[18,]),'OUTPUT':([11,],[19,]),'RBRACE':([12,13,14,15,16,27,34,37,39,45,49,50,51,52,53,55,57,],[-26,26,-27,-9,-28,-8,-13,-11,-21,-25,-12,-10,-23,-20,-22,-24,-19,]),'IMPORT':([2,],[8,]),'INPUT':([11,],[20,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,12,17,22,-26,12,-27,-9,-28,12,35,35,12,12,12,42,12,-8,-30,12,47,35,-15,-13,-17,35,-11,12,-21,12,12,12,12,-29,-25,56,-18,-14,-12,-10,-23,-20,-22,-24,-19,-16,]),'LPAREN':([0,3,4,5,7,9,10,12,13,14,15,16,18,19,20,21,22,23,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[2,2,-4,-5,11,-3,-2,-26,11,-27,-9,-28,11,31,31,11,11,11,11,-7,-8,-6,-30,11,31,-15,-13,-17,31,-11,11,-21,11,11,11,11,-29,-25,-14,-12,-10,-23,-20,-22,-24,-19,-16,]),'NUMBER':([7,12,13,14,15,16,18,21,22,23,25,27,29,30,34,37,38,39,40,41,42,43,44,45,49,50,51,52,53,55,57,],[14,-26,14,-27,-9,-28,14,14,14,14,14,-8,-30,14,-13,-11,14,-21,14,14,14,14,-29,-25,-12,-10,-23,-20,-22,-24,-19,]),'OP_ADD':([11,],[23,]),'STRING':([7,12,13,14,15,16,18,21,22,23,25,27,29,30,34,37,38,39,40,41,42,43,44,45,49,50,51,52,53,55,57,],[16,-26,16,-27,-9,-28,16,16,16,16,16,-8,-30,16,-13,-11,16,-21,16,16,16,16,-29,-25,-12,-10,-23,-20,-22,-24,-19,]),'ASSIGN':([11,],[24,]),'RPAREN':([12,14,16,17,19,20,22,29,30,32,33,34,35,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,34,37,39,-30,45,49,-15,-13,-17,50,-11,51,-21,52,53,55,-29,-25,-14,-12,-10,-23,-20,-22,57,-24,58,-19,-16,]),'$end':([3,4,5,6,9,10,26,28,],[-1,-4,-5,0,-3,-2,-7,-6,]),'OP_MUL':([11,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[13,]),'statement_list':([0,],[3,]),'declaration_list':([19,20,],[32,36,]),'expression':([7,13,18,21,22,23,25,30,38,40,41,42,43,],[15,27,29,29,29,29,29,44,44,44,44,54,44,]),'import_statement':([0,3,],[4,9,]),'component':([0,3,],[5,10,]),'parameter_list':([18,21,22,23,25,],[30,38,40,41,43,]),'declaration':([19,20,32,36,],[33,33,48,48,]),'program':([0,],[6,]),'type':([31,],[46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
