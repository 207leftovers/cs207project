
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'INPUT':([15,],[21,]),'OP_MUL':([15,],[22,]),'RBRACE':([12,13,14,16,17,19,33,38,41,47,49,51,52,53,54,55,57,],[20,-28,-9,-27,-26,-8,-11,-13,-21,-10,-24,-12,-22,-20,-25,-23,-19,]),'STRING':([8,12,13,14,16,17,19,22,25,26,27,28,33,34,35,36,38,39,40,41,42,43,47,48,49,51,52,53,54,55,57,],[13,13,-28,-9,-27,-26,-8,13,13,13,13,13,-11,-30,13,13,-13,13,13,-21,13,13,-10,-29,-24,-12,-22,-20,-25,-23,-19,]),'OUTPUT':([15,],[24,]),'$end':([2,3,5,6,9,10,18,20,],[0,-4,-5,-1,-3,-2,-6,-7,]),'LPAREN':([0,3,5,6,8,9,10,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[1,-4,-5,1,15,-3,-2,15,-28,-9,-27,-26,-6,-8,-7,29,15,29,15,15,15,15,-17,29,-15,-11,-30,15,15,29,-13,15,15,-21,15,15,-14,-10,-29,-24,-12,-22,-20,-25,-23,-19,-16,]),'NUMBER':([8,12,13,14,16,17,19,22,25,26,27,28,33,34,35,36,38,39,40,41,42,43,47,48,49,51,52,53,54,55,57,],[16,16,-28,-9,-27,-26,-8,16,16,16,16,16,-11,-30,16,16,-13,16,16,-21,16,16,-10,-29,-24,-12,-22,-20,-25,-23,-19,]),'OP_ADD':([15,],[25,]),'ID':([4,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[8,11,17,17,-28,-9,26,-27,-26,-8,30,17,36,30,17,17,17,17,45,-17,30,-15,-11,-30,17,17,30,-13,17,17,-21,17,17,56,-18,-14,-10,-29,-24,-12,-22,-20,-25,-23,-19,-16,]),'OP_DIV':([15,],[27,]),'LBRACE':([0,3,5,6,9,10,18,20,],[4,-4,-5,4,-3,-2,-6,-7,]),'OP_SUB':([15,],[28,]),'ASSIGN':([15,],[23,]),'IMPORT':([1,],[7,]),'RPAREN':([11,13,16,17,21,24,26,30,31,32,33,34,35,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,33,38,41,-17,47,-15,-11,-30,49,51,-13,52,53,-21,54,55,-14,-10,-29,-24,57,-12,-22,-20,-25,-23,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[2,]),'import_statement':([0,6,],[3,9,]),'declaration_list':([21,24,],[31,37,]),'expression_list':([8,],[12,]),'type':([29,],[44,]),'parameter_list':([22,25,26,27,28,],[35,39,40,42,43,]),'expression':([8,12,22,25,26,27,28,35,36,39,40,42,43,],[14,19,34,34,34,34,34,48,50,48,48,48,48,]),'declaration':([21,24,31,37,],[32,32,46,46,]),'component':([0,6,],[5,10,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
