
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OP_DIV':([15,],[19,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,12,-26,-28,-9,20,12,-27,12,12,36,38,12,12,36,12,-8,-30,12,12,-21,-15,36,-13,-17,49,12,12,12,-11,36,12,-29,-25,-20,-14,-12,-18,56,-22,-24,-10,-23,-19,-16,]),'OP_ADD':([15,],[23,]),'INPUT':([15,],[25,]),'$end':([1,2,3,5,7,8,18,28,],[0,-1,-4,-5,-3,-2,-6,-7,]),'NUMBER':([10,12,13,14,16,17,19,20,23,24,26,27,29,30,31,32,35,38,39,40,41,43,44,45,46,48,52,53,54,55,57,],[17,-26,-28,-9,17,-27,17,17,17,17,17,-8,-30,17,17,-21,-13,17,17,17,-11,17,-29,-25,-20,-12,-22,-24,-10,-23,-19,]),'STRING':([10,12,13,14,16,17,19,20,23,24,26,27,29,30,31,32,35,38,39,40,41,43,44,45,46,48,52,53,54,55,57,],[13,-26,-28,-9,13,-27,13,13,13,13,13,-8,-30,13,13,-21,-13,13,13,13,-11,13,-29,-25,-20,-12,-22,-24,-10,-23,-19,]),'ASSIGN':([15,],[22,]),'OUTPUT':([15,],[21,]),'OP_MUL':([15,],[24,]),'RPAREN':([11,12,13,17,20,21,25,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,32,35,41,-30,45,46,-21,-15,48,-13,-17,52,53,-11,54,55,-29,-25,-20,-14,-12,57,-22,-24,-10,-23,58,-19,-16,]),'RBRACE':([12,13,14,16,17,27,32,35,41,45,46,48,52,53,54,55,57,],[-26,-28,-9,28,-27,-8,-21,-13,-11,-25,-20,-12,-22,-24,-10,-23,-19,]),'LBRACE':([0,2,3,5,7,8,18,28,],[6,6,-4,-5,-3,-2,-6,-7,]),'LPAREN':([0,2,3,5,7,8,10,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,57,58,],[4,4,-4,-5,-3,-2,15,-26,-28,-9,15,-27,-6,15,15,37,15,15,37,15,-8,-7,-30,15,15,-21,-15,37,-13,-17,15,15,15,-11,37,15,-29,-25,-20,-14,-12,-22,-24,-10,-23,-19,-16,]),'IMPORT':([4,],[9,]),'OP_SUB':([15,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([21,25,34,42,],[33,33,47,47,]),'program':([0,],[1,]),'declaration_list':([21,25,],[34,42,]),'statement_list':([0,],[2,]),'expression_list':([10,],[16,]),'import_statement':([0,2,],[3,7,]),'expression':([10,16,19,20,23,24,26,30,31,38,39,40,43,],[14,27,29,29,29,29,29,44,44,51,44,44,44,]),'parameter_list':([19,20,23,24,26,],[30,31,39,40,43,]),'component':([0,2,],[5,8,]),'type':([37,],[50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
