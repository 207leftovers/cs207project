
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'


_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'ASSIGN':([12,],[22,]),'LPAREN':([0,2,5,6,7,8,9,11,13,14,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,50,51,52,53,54,55,56,58,],[3,3,-5,-4,12,-2,-3,12,-28,-26,-27,-9,-8,-7,12,12,36,12,12,12,36,-6,12,-30,12,-21,12,-11,-15,-17,36,12,12,12,-13,36,-22,-29,-20,-10,-14,-24,-23,-25,-12,-19,-16,]),'OP_ADD':([12,],[20,]),'RBRACE':([11,13,14,15,16,18,32,34,42,44,46,50,52,53,54,55,56,],[19,-28,-26,-27,-9,-8,-21,-11,-13,-22,-20,-10,-24,-23,-25,-12,-19,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[7,14,17,14,21,-28,-26,-27,-9,-8,14,14,33,37,14,14,14,37,14,-30,14,-21,14,-11,-15,49,-17,37,14,14,14,-13,37,-22,-29,-20,57,-18,-10,-14,-24,-23,-25,-12,-19,-16,]),'OP_SUB':([12,],[25,]),'IMPORT':([3,],[10,]),'LBRACE':([0,2,5,6,8,9,19,28,],[1,1,-5,-4,-2,-3,-7,-6,]),'INPUT':([12,],[23,]),'RPAREN':([13,14,15,17,21,23,27,29,30,31,32,34,35,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,32,34,42,44,-30,46,-21,-11,-15,-17,50,52,53,54,-13,55,-22,-29,-20,56,-10,-14,-24,-23,-25,-12,-19,58,-16,]),'OP_DIV':([12,],[26,]),'$end':([2,4,5,6,8,9,19,28,],[-1,0,-5,-4,-2,-3,-7,-6,]),'NUMBER':([7,11,13,14,15,16,18,20,21,24,25,26,29,30,31,32,33,34,39,40,41,42,44,45,46,50,52,53,54,55,56,],[15,15,-28,-26,-27,-9,-8,15,15,15,15,15,15,-30,15,-21,15,-11,15,15,15,-13,-22,-29,-20,-10,-24,-23,-25,-12,-19,]),'OP_MUL':([12,],[24,]),'STRING':([7,11,13,14,15,16,18,20,21,24,25,26,29,30,31,32,33,34,39,40,41,42,44,45,46,50,52,53,54,55,56,],[13,13,-28,-26,-27,-9,-8,13,13,13,13,13,13,-30,13,-21,13,-11,13,13,13,-13,-22,-29,-20,-10,-24,-23,-25,-12,-19,]),'OUTPUT':([12,],[27,]),}


_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items


_lr_goto_items = {'expression_list':([7,],[11,]),'statement_list':([0,],[2,]),'parameter_list':([20,21,24,25,26,],[29,31,39,40,41,]),'component':([0,2,],[5,8,]),'program':([0,],[4,]),'expression':([7,11,20,21,24,25,26,29,31,33,39,40,41,],[16,18,30,30,30,30,30,45,45,47,45,45,45,]),'type':([36,],[48,]),'declaration':([23,27,38,43,],[35,35,51,51,]),'declaration_list':([23,27,],[38,43,]),'import_statement':([0,2,],[6,9,]),}


_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
