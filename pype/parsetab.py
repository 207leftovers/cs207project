
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'NUMBER':([10,12,13,14,16,17,19,21,22,24,25,28,29,30,31,35,37,38,39,41,42,43,44,45,49,50,51,52,53,54,57,],[12,-27,-28,-26,12,-9,12,12,12,12,12,-8,-21,-30,12,-11,12,12,-13,12,12,12,-20,-29,-10,-25,-24,-12,-22,-23,-19,]),'RBRACE':([12,13,14,16,17,28,29,35,39,44,49,50,51,52,53,54,57,],[-27,-28,-26,27,-9,-8,-21,-11,-13,-20,-10,-25,-24,-12,-22,-23,-19,]),'STRING':([10,12,13,14,16,17,19,21,22,24,25,28,29,30,31,35,37,38,39,41,42,43,44,45,49,50,51,52,53,54,57,],[13,-27,-28,-26,13,-9,13,13,13,13,13,-8,-21,-30,13,-11,13,13,-13,13,13,13,-20,-29,-10,-25,-24,-12,-22,-23,-19,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,14,-27,-28,-26,19,14,-9,14,33,14,14,33,14,14,43,-8,-21,-30,14,46,-17,-15,-11,33,14,14,-13,33,14,14,14,-20,-29,-18,56,-14,-10,-25,-24,-12,-22,-23,-19,-16,]),'RPAREN':([11,12,13,14,19,20,23,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-28,-26,29,35,39,-21,-30,44,-17,-15,-11,49,50,51,-13,52,53,54,-20,-29,-14,-10,-25,-24,-12,-22,-23,57,58,-19,-16,]),'LBRACE':([0,2,4,5,8,9,18,27,],[6,-5,6,-4,-2,-3,-6,-7,]),'OP_DIV':([15,],[21,]),'OP_MUL':([15,],[22,]),'LPAREN':([0,2,4,5,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,],[3,-5,3,-4,-2,-3,15,-27,-28,-26,15,-9,-6,15,32,15,15,32,15,15,-7,-8,-21,-30,15,-17,-15,-11,32,15,15,-13,32,15,15,15,-20,-29,-14,-10,-25,-24,-12,-22,-23,-19,-16,]),'INPUT':([15,],[20,]),'OUTPUT':([15,],[23,]),'IMPORT':([3,],[7,]),'$end':([1,2,4,5,8,9,18,27,],[0,-5,-1,-4,-2,-3,-6,-7,]),'OP_ADD':([15,],[24,]),'OP_SUB':([15,],[25,]),'ASSIGN':([15,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'component':([0,4,],[2,8,]),'statement_list':([0,],[4,]),'declaration':([20,23,36,40,],[34,34,48,48,]),'import_statement':([0,4,],[5,9,]),'expression':([10,16,19,21,22,24,25,31,37,38,41,42,43,],[17,28,30,30,30,30,30,45,45,45,45,45,55,]),'expression_list':([10,],[16,]),'parameter_list':([19,21,22,24,25,],[31,37,38,41,42,]),'declaration_list':([20,23,],[36,40,]),'type':([32,],[47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
