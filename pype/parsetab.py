
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'OUTPUT':([13,],[21,]),'RPAREN':([11,14,15,17,21,25,26,29,31,32,33,34,35,36,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,29,39,40,-13,46,-15,-17,49,-30,50,52,-21,-11,53,54,55,-12,-14,-29,-22,-23,57,-20,-10,-25,-24,58,-19,-16,]),'OP_ADD':([13,],[22,]),'LPAREN':([0,1,2,4,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,52,53,54,55,57,58,],[3,-4,-5,3,-3,-2,13,13,-27,-26,-9,-28,-6,-8,-7,30,13,13,13,30,13,13,-13,30,-15,-17,13,-30,13,13,13,-21,-11,30,13,13,-12,-14,-29,-22,-23,-20,-10,-25,-24,-19,-16,]),'OP_SUB':([13,],[23,]),'OP_MUL':([13,],[28,]),'ASSIGN':([13,],[24,]),'NUMBER':([10,12,14,15,16,17,19,22,23,25,27,28,29,34,35,36,37,38,39,40,42,43,46,48,49,50,52,53,54,55,57,],[14,14,-27,-26,-9,-28,-8,14,14,14,14,14,-13,14,-30,14,14,14,-21,-11,14,14,-12,-29,-22,-23,-20,-10,-25,-24,-19,]),'ID':([5,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,15,15,25,-27,-26,-9,-28,-8,33,15,15,37,15,33,15,15,-13,45,33,-15,-17,15,-30,15,15,15,-21,-11,33,15,15,56,-18,-12,-14,-29,-22,-23,-20,-10,-25,-24,-19,-16,]),'IMPORT':([3,],[7,]),'INPUT':([13,],[26,]),'STRING':([10,12,14,15,16,17,19,22,23,25,27,28,29,34,35,36,37,38,39,40,42,43,46,48,49,50,52,53,54,55,57,],[17,17,-27,-26,-9,-28,-8,17,17,17,17,17,-13,17,-30,17,17,17,-21,-11,17,17,-12,-29,-22,-23,-20,-10,-25,-24,-19,]),'RBRACE':([12,14,15,16,17,19,29,39,40,46,49,50,52,53,54,55,57,],[20,-27,-26,-9,-28,-8,-13,-21,-11,-12,-22,-23,-20,-10,-25,-24,-19,]),'OP_DIV':([13,],[27,]),'LBRACE':([0,1,2,4,8,9,18,20,],[5,-4,-5,5,-3,-2,-6,-7,]),'$end':([1,2,4,6,8,9,18,20,],[-4,-5,-1,0,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([22,23,25,27,28,],[34,36,38,42,43,]),'expression':([10,12,22,23,25,27,28,34,36,37,38,42,43,],[16,19,35,35,35,35,35,48,48,51,48,48,48,]),'import_statement':([0,4,],[1,8,]),'component':([0,4,],[2,9,]),'declaration_list':([21,26,],[31,41,]),'expression_list':([10,],[12,]),'statement_list':([0,],[4,]),'type':([30,],[44,]),'declaration':([21,26,31,41,],[32,32,47,47,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
