
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'OP_ADD':([13,],[19,]),'$end':([1,2,3,6,7,8,18,28,],[-4,-1,0,-5,-3,-2,-6,-7,]),'LBRACE':([0,1,2,6,7,8,18,28,],[5,-4,5,-5,-3,-2,-6,-7,]),'LPAREN':([0,1,2,6,7,8,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,49,50,51,54,55,56,58,],[4,-4,4,-5,-3,-2,13,-9,-26,-28,13,-27,-6,13,13,13,13,39,13,39,-8,-7,13,-30,13,13,-21,13,13,-15,-11,39,-17,13,-13,39,-29,-22,-24,-20,-25,-14,-10,-23,-12,-19,-16,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[10,11,14,-9,21,-26,-28,14,-27,14,14,14,34,14,40,14,40,-8,14,-30,14,14,-21,14,14,-15,-11,40,52,-17,14,-13,40,-29,-22,-24,-20,-25,-14,-10,-18,57,-23,-12,-19,-16,]),'ASSIGN':([13,],[22,]),'OP_SUB':([13,],[25,]),'INPUT':([13,],[24,]),'STRING':([10,12,14,15,16,17,19,20,21,23,25,27,29,30,31,32,33,34,35,37,41,42,44,45,46,47,49,51,54,55,56,],[15,-9,-26,-28,15,-27,15,15,15,15,15,-8,15,-30,15,15,-21,15,15,-11,15,-13,-29,-22,-24,-20,-25,-10,-23,-12,-19,]),'RBRACE':([12,14,15,16,17,27,33,37,42,45,46,47,49,51,54,55,56,],[-9,-26,-28,28,-27,-8,-21,-11,-13,-22,-24,-20,-25,-10,-23,-12,-19,]),'OP_MUL':([13,],[20,]),'OP_DIV':([13,],[23,]),'RPAREN':([11,14,15,17,21,24,26,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[18,-26,-28,-27,33,37,42,45,-30,46,47,-21,49,-15,-11,51,-17,54,-13,55,-29,-22,-24,-20,56,-25,-14,-10,-23,-12,-19,58,-16,]),'NUMBER':([10,12,14,15,16,17,19,20,21,23,25,27,29,30,31,32,33,34,35,37,41,42,44,45,46,47,49,51,54,55,56,],[17,-9,-26,-28,17,-27,17,17,17,17,17,-8,17,-30,17,17,-21,17,17,-11,17,-13,-29,-22,-24,-20,-25,-10,-23,-12,-19,]),'IMPORT':([4,],[9,]),'OUTPUT':([13,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([24,26,],[38,43,]),'expression':([10,16,19,20,21,23,25,29,31,32,34,35,41,],[12,27,30,30,30,30,30,44,44,44,48,44,44,]),'declaration':([24,26,38,43,],[36,36,50,50,]),'type':([39,],[53,]),'import_statement':([0,2,],[1,7,]),'parameter_list':([19,20,21,23,25,],[29,31,32,35,41,]),'expression_list':([10,],[16,]),'program':([0,],[3,]),'statement_list':([0,],[2,]),'component':([0,2,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',95),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',101),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',105),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',109),
  ('expression -> STRING','expression',1,'p_string','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',117),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',118),
]
