
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'LBRACE':([0,2,4,5,8,9,18,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'$end':([2,3,4,5,8,9,18,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'OUTPUT':([16,],[22,]),'INPUT':([16,],[20,]),'OP_ADD':([16,],[21,]),'STRING':([7,11,12,13,14,15,19,21,23,25,26,27,33,34,35,37,38,39,40,41,42,43,45,48,49,50,51,53,54,55,57,],[12,-27,-28,12,-9,-26,-8,12,12,12,12,12,-11,12,-30,-13,12,12,12,12,12,-21,-10,-29,-22,-12,-23,-25,-24,-20,-19,]),'NUMBER':([7,11,12,13,14,15,19,21,23,25,26,27,33,34,35,37,38,39,40,41,42,43,45,48,49,50,51,53,54,55,57,],[11,-27,-28,11,-9,-26,-8,11,11,11,11,11,-11,11,-30,-13,11,11,11,11,11,-21,-10,-29,-22,-12,-23,-25,-24,-20,-19,]),'RBRACE':([11,12,13,14,15,19,33,37,43,45,49,50,51,53,54,55,57,],[-27,-28,18,-9,-26,-8,-11,-13,-21,-10,-22,-12,-23,-25,-24,-20,-19,]),'OP_SUB':([16,],[23,]),'ASSIGN':([16,],[24,]),'OP_DIV':([16,],[25,]),'OP_MUL':([16,],[26,]),'IMPORT':([6,],[10,]),'ID':([1,7,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[7,15,17,-27,-28,15,-9,-26,27,-8,31,15,31,15,39,15,15,15,31,-15,-17,47,-11,15,-30,31,-13,15,15,15,15,15,-21,-14,-10,56,-18,-29,-22,-12,-23,-25,-24,-20,-19,-16,]),'LPAREN':([0,2,4,5,7,8,9,11,12,13,14,15,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,57,58,],[6,-5,-4,6,16,-2,-3,-27,-28,16,-9,-26,-7,-8,32,16,32,16,16,16,16,-6,32,-15,-17,-11,16,-30,32,-13,16,16,16,16,16,-21,-14,-10,-29,-22,-12,-23,-25,-24,-20,-19,-16,]),'RPAREN':([11,12,15,17,20,22,27,29,30,31,33,34,35,36,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,33,37,43,45,-15,-17,-11,49,-30,50,-13,51,53,54,55,-21,-14,-10,-29,-22,-12,-23,57,-25,-24,-20,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([20,22,],[29,36,]),'component':([0,5,],[2,8,]),'declaration':([20,22,29,36,],[30,30,44,44,]),'program':([0,],[3,]),'import_statement':([0,5,],[4,9,]),'statement_list':([0,],[5,]),'parameter_list':([21,23,25,26,27,],[34,38,40,41,42,]),'expression_list':([7,],[13,]),'type':([32,],[46,]),'expression':([7,13,21,23,25,26,27,34,38,39,40,41,42,],[14,19,35,35,35,35,35,48,48,52,48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
