
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'INPUT':([14,],[22,]),'RPAREN':([11,12,13,16,22,24,25,29,30,31,32,33,34,36,37,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-28,-27,-26,36,40,41,-30,44,46,47,49,-15,-11,-17,53,-13,-21,54,55,-25,-29,-24,-22,-14,-10,57,-12,-20,-23,58,-19,-16,]),'RBRACE':([12,13,15,16,17,28,36,40,41,44,46,47,49,53,54,55,57,],[-28,-27,-9,-26,27,-8,-11,-13,-21,-25,-24,-22,-10,-12,-20,-23,-19,]),'IMPORT':([1,],[7,]),'OP_ADD':([14,],[21,]),'OP_DIV':([14,],[19,]),'ASSIGN':([14,],[23,]),'STRING':([10,12,13,15,16,17,19,20,21,25,26,28,29,30,31,32,36,38,40,41,42,43,44,45,46,47,49,53,54,55,57,],[12,-28,-27,-9,-26,12,12,12,12,12,12,-8,-30,12,12,12,-11,12,-13,-21,12,12,-25,-29,-24,-22,-10,-12,-20,-23,-19,]),'OUTPUT':([14,],[24,]),'LPAREN':([0,3,4,6,8,9,10,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,58,],[1,1,-5,-4,-2,-3,14,-28,-27,-9,-26,14,-6,14,14,14,35,35,14,14,-7,-8,-30,14,14,14,35,-15,-11,-17,14,35,-13,-21,14,14,-25,-29,-24,-22,-14,-10,-12,-20,-23,-19,-16,]),'$end':([2,3,4,6,8,9,18,27,],[0,-1,-5,-4,-2,-3,-6,-7,]),'OP_MUL':([14,],[20,]),'NUMBER':([10,12,13,15,16,17,19,20,21,25,26,28,29,30,31,32,36,38,40,41,42,43,44,45,46,47,49,53,54,55,57,],[13,-28,-27,-9,-26,13,13,13,13,13,13,-8,-30,13,13,13,-11,13,-13,-21,13,13,-25,-29,-24,-22,-10,-12,-20,-23,-19,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,16,-28,-27,25,-9,-26,16,16,16,16,37,38,37,16,16,-8,-30,16,16,16,37,-15,50,-11,-17,16,37,-13,-21,16,16,-25,-29,-24,-22,-14,-10,-18,56,-12,-20,-23,-19,-16,]),'LBRACE':([0,3,4,6,8,9,18,27,],[5,5,-5,-4,-2,-3,-6,-7,]),'OP_SUB':([14,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([22,24,],[33,39,]),'declaration':([22,24,33,39,],[34,34,48,48,]),'type':([35,],[51,]),'program':([0,],[2,]),'parameter_list':([19,20,21,25,26,],[30,31,32,42,43,]),'expression':([10,17,19,20,21,25,26,30,31,32,38,42,43,],[15,28,29,29,29,29,29,45,45,45,52,45,45,]),'statement_list':([0,],[3,]),'expression_list':([10,],[17,]),'component':([0,3,],[4,8,]),'import_statement':([0,3,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
