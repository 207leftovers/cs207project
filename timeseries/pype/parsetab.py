
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'RPAREN':([11,13,15,17,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,33,36,41,-17,-15,47,-13,48,-30,-11,50,51,52,53,-21,54,-14,-12,-24,-29,-10,-23,-25,-22,-20,57,58,-19,-16,]),'OUTPUT':([14,],[21,]),'OP_MUL':([14,],[22,]),'$end':([1,3,4,5,8,9,18,19,],[0,-1,-4,-5,-3,-2,-6,-7,]),'INPUT':([14,],[23,]),'LBRACE':([0,3,4,5,8,9,18,19,],[6,6,-4,-5,-3,-2,-6,-7,]),'OP_SUB':([14,],[24,]),'RBRACE':([12,13,15,16,17,20,33,36,41,47,48,50,51,52,53,54,57,],[19,-26,-28,-9,-27,-8,-13,-11,-21,-12,-24,-10,-23,-25,-22,-20,-19,]),'OP_ADD':([14,],[26,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,13,13,-26,27,-28,-9,-27,-8,30,13,30,13,13,13,13,43,45,-17,-15,30,-13,13,-30,-11,30,13,13,13,-21,13,13,56,-18,-14,-12,-24,-29,-10,-23,-25,-22,-20,-19,-16,]),'LPAREN':([0,3,4,5,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[2,2,-4,-5,-3,-2,14,14,-26,-28,-9,-27,-6,-7,-8,29,14,29,14,14,14,14,-17,-15,29,-13,14,-30,-11,29,14,14,14,-21,14,14,-14,-12,-24,-29,-10,-23,-25,-22,-20,-19,-16,]),'IMPORT':([2,],[7,]),'STRING':([10,12,13,15,16,17,20,22,24,25,26,27,33,34,35,36,38,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[15,15,-26,-28,-9,-27,-8,15,15,15,15,15,-13,15,-30,-11,15,15,15,-21,15,15,-12,-24,-29,-10,-23,-25,-22,-20,-19,]),'OP_DIV':([14,],[25,]),'ASSIGN':([14,],[28,]),'NUMBER':([10,12,13,15,16,17,20,22,24,25,26,27,33,34,35,36,38,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[17,17,-26,-28,-9,-27,-8,17,17,17,17,17,-13,17,-30,-11,17,17,17,-21,17,17,-12,-24,-29,-10,-23,-25,-22,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[3,]),'declaration':([21,23,32,37,],[31,31,46,46,]),'type':([29,],[44,]),'expression_list':([10,],[12,]),'import_statement':([0,3,],[4,8,]),'component':([0,3,],[5,9,]),'declaration_list':([21,23,],[32,37,]),'expression':([10,12,22,24,25,26,27,34,38,39,40,42,43,],[16,20,35,35,35,35,35,49,49,49,49,49,55,]),'parameter_list':([22,24,25,26,27,],[34,38,39,40,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',43),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',51),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',52),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',59),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',60),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',68),
  ('declaration -> ID','declaration',1,'p_id','parser.py',69),
  ('type -> ID','type',1,'p_type_id','parser.py',76),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',84),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',92),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',100),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',104),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',112),
  ('expression -> STRING','expression',1,'p_string','parser.py',116),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',120),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',121),
]
