
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'OUTPUT':([15,],[18,]),'LBRACE':([0,1,2,6,9,10,27,28,],[4,-5,-4,4,-2,-3,-7,-6,]),'INPUT':([15,],[19,]),'NUMBER':([7,11,12,13,14,16,20,21,22,24,25,26,30,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,54,55,57,],[12,-9,-27,-26,-28,12,12,12,12,12,12,-8,-13,-11,-30,12,-21,12,12,12,12,12,-12,-10,-29,-22,-20,-23,-24,-25,-19,]),'STRING':([7,11,12,13,14,16,20,21,22,24,25,26,30,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,54,55,57,],[14,-9,-27,-26,-28,14,14,14,14,14,14,-8,-13,-11,-30,14,-21,14,14,14,14,14,-12,-10,-29,-22,-20,-23,-24,-25,-19,]),'$end':([1,2,3,6,9,10,27,28,],[-5,-4,0,-1,-2,-3,-7,-6,]),'OP_ADD':([15,],[20,]),'ID':([4,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,13,17,-9,-27,-26,-28,21,13,29,29,13,13,13,41,13,13,-8,-17,-13,29,47,-15,29,-11,-30,13,-21,13,13,13,13,13,-12,-14,56,-18,-10,-29,-22,-20,-23,-24,-25,-19,-16,]),'IMPORT':([5,],[8,]),'RPAREN':([12,13,14,17,18,19,21,29,30,31,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,30,35,38,-17,-13,44,-15,48,-11,-30,50,-21,51,52,54,55,-12,-14,-10,-29,-22,-20,-23,57,-24,-25,58,-19,-16,]),'OP_SUB':([15,],[22,]),'LPAREN':([0,1,2,6,7,9,10,11,12,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,54,55,57,58,],[5,-5,-4,5,15,-2,-3,-9,-27,-26,-28,15,32,32,15,15,15,15,15,-8,-7,-6,-17,-13,32,-15,32,-11,-30,15,-21,15,15,15,15,15,-12,-14,-10,-29,-22,-20,-23,-24,-25,-19,-16,]),'RBRACE':([11,12,13,14,16,26,30,35,38,44,48,50,51,52,54,55,57,],[-9,-27,-26,-28,27,-8,-13,-11,-21,-12,-10,-22,-20,-23,-24,-25,-19,]),'ASSIGN':([15,],[23,]),'OP_MUL':([15,],[24,]),'OP_DIV':([15,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,6,],[1,9,]),'expression':([7,16,20,21,22,24,25,37,39,40,41,42,43,],[11,26,36,36,36,36,36,49,49,49,53,49,49,]),'import_statement':([0,6,],[2,10,]),'program':([0,],[3,]),'parameter_list':([20,21,22,24,25,],[37,39,40,42,43,]),'declaration_list':([18,19,],[31,34,]),'type':([32,],[46,]),'expression_list':([7,],[16,]),'declaration':([18,19,31,34,],[33,33,45,45,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputExpr','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputExpr','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputExpr','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputExpr','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_id','parser.py',69),
  ('declaration -> ID','declaration',1,'p_id','parser.py',70),
  ('type -> ID','type',1,'p_type_id','parser.py',77),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assignExpr','parser.py',81),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_named_function_operation','parser.py',85),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_named_function_operation','parser.py',86),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add','parser.py',93),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub','parser.py',97),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul','parser.py',101),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div','parser.py',105),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',109),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',113),
  ('expression -> STRING','expression',1,'p_string','parser.py',117),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',121),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',122),
]
